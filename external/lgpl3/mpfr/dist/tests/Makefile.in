# Makefile.in generated by automake 1.11.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# Copyright 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software Foundation, Inc.
# This Makefile.am is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
ANSI2KNR = $(top_builddir)/ansi2knr
check_PROGRAMS = tversion$(EXEEXT) tinternals$(EXEEXT) tinits$(EXEEXT) \
	tisqrt$(EXEEXT) tsgn$(EXEEXT) tcheck$(EXEEXT) tisnan$(EXEEXT) \
	texceptions$(EXEEXT) tset_exp$(EXEEXT) tset$(EXEEXT) \
	mpf_compat$(EXEEXT) mpfr_compat$(EXEEXT) reuse$(EXEEXT) \
	tabs$(EXEEXT) tacos$(EXEEXT) tacosh$(EXEEXT) tadd$(EXEEXT) \
	tadd1sp$(EXEEXT) tadd_d$(EXEEXT) tadd_ui$(EXEEXT) \
	tagm$(EXEEXT) tasin$(EXEEXT) tasinh$(EXEEXT) tatan$(EXEEXT) \
	tatanh$(EXEEXT) taway$(EXEEXT) tbuildopt$(EXEEXT) \
	tcan_round$(EXEEXT) tcbrt$(EXEEXT) tcmp$(EXEEXT) \
	tcmp2$(EXEEXT) tcmp_d$(EXEEXT) tcmp_ld$(EXEEXT) \
	tcmp_ui$(EXEEXT) tcmpabs$(EXEEXT) tcomparisons$(EXEEXT) \
	tconst_catalan$(EXEEXT) tconst_euler$(EXEEXT) \
	tconst_log2$(EXEEXT) tconst_pi$(EXEEXT) tcopysign$(EXEEXT) \
	tcos$(EXEEXT) tcosh$(EXEEXT) tcot$(EXEEXT) tcoth$(EXEEXT) \
	tcsc$(EXEEXT) tcsch$(EXEEXT) td_div$(EXEEXT) td_sub$(EXEEXT) \
	tdigamma$(EXEEXT) tdim$(EXEEXT) tdiv$(EXEEXT) tdiv_d$(EXEEXT) \
	tdiv_ui$(EXEEXT) teint$(EXEEXT) teq$(EXEEXT) terf$(EXEEXT) \
	texp$(EXEEXT) texp10$(EXEEXT) texp2$(EXEEXT) texpm1$(EXEEXT) \
	tfactorial$(EXEEXT) tfits$(EXEEXT) tfma$(EXEEXT) \
	tfmod$(EXEEXT) tfms$(EXEEXT) tfprintf$(EXEEXT) tfrac$(EXEEXT) \
	tgamma$(EXEEXT) tget_flt$(EXEEXT) tget_d$(EXEEXT) \
	tget_d_2exp$(EXEEXT) tget_f$(EXEEXT) tget_ld_2exp$(EXEEXT) \
	tget_set_d64$(EXEEXT) tget_sj$(EXEEXT) tget_str$(EXEEXT) \
	tget_z$(EXEEXT) tgmpop$(EXEEXT) thyperbolic$(EXEEXT) \
	thypot$(EXEEXT) tinp_str$(EXEEXT) tj0$(EXEEXT) tj1$(EXEEXT) \
	tjn$(EXEEXT) tl2b$(EXEEXT) tlgamma$(EXEEXT) tli2$(EXEEXT) \
	tlngamma$(EXEEXT) tlog$(EXEEXT) tlog10$(EXEEXT) \
	tlog1p$(EXEEXT) tlog2$(EXEEXT) tmin_prec$(EXEEXT) \
	tminmax$(EXEEXT) tmodf$(EXEEXT) tmul$(EXEEXT) \
	tmul_2exp$(EXEEXT) tmul_d$(EXEEXT) tmul_ui$(EXEEXT) \
	tnext$(EXEEXT) tout_str$(EXEEXT) toutimpl$(EXEEXT) \
	tpow$(EXEEXT) tpow3$(EXEEXT) tpow_all$(EXEEXT) tpow_z$(EXEEXT) \
	tprintf$(EXEEXT) trandom$(EXEEXT) trec_sqrt$(EXEEXT) \
	tremquo$(EXEEXT) trint$(EXEEXT) troot$(EXEEXT) \
	tround_prec$(EXEEXT) tsec$(EXEEXT) tsech$(EXEEXT) \
	tset_d$(EXEEXT) tset_f$(EXEEXT) tset_ld$(EXEEXT) \
	tset_q$(EXEEXT) tset_si$(EXEEXT) tset_sj$(EXEEXT) \
	tset_str$(EXEEXT) tset_z$(EXEEXT) tset_z_exp$(EXEEXT) \
	tsi_op$(EXEEXT) tsin$(EXEEXT) tsin_cos$(EXEEXT) tsinh$(EXEEXT) \
	tsinh_cosh$(EXEEXT) tsprintf$(EXEEXT) tsqr$(EXEEXT) \
	tsqrt$(EXEEXT) tsqrt_ui$(EXEEXT) tstckintc$(EXEEXT) \
	tstrtofr$(EXEEXT) tsub$(EXEEXT) tsub1sp$(EXEEXT) \
	tsub_d$(EXEEXT) tsub_ui$(EXEEXT) tsubnormal$(EXEEXT) \
	tsum$(EXEEXT) tswap$(EXEEXT) turandom$(EXEEXT) ttan$(EXEEXT) \
	ttanh$(EXEEXT) ttrunc$(EXEEXT) tui_div$(EXEEXT) \
	tui_pow$(EXEEXT) tui_sub$(EXEEXT) ty0$(EXEEXT) ty1$(EXEEXT) \
	tyn$(EXEEXT) tzeta$(EXEEXT) tzeta_ui$(EXEEXT) tai$(EXEEXT)
subdir = tests
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/m4/size_max.m4 $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
libfrtests_la_LIBADD =
am_libfrtests_la_OBJECTS = memory$U.lo rnd_mode$U.lo tests$U.lo \
	cmp_str$U.lo random2$U.lo
libfrtests_la_OBJECTS = $(am_libfrtests_la_OBJECTS)
mpf_compat_SOURCES = mpf_compat.c
mpf_compat_OBJECTS = mpf_compat$U.$(OBJEXT)
mpf_compat_LDADD = $(LDADD)
am__DEPENDENCIES_1 =
mpf_compat_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
mpfr_compat_SOURCES = mpfr_compat.c
mpfr_compat_OBJECTS = mpfr_compat$U.$(OBJEXT)
mpfr_compat_LDADD = $(LDADD)
mpfr_compat_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
reuse_SOURCES = reuse.c
reuse_OBJECTS = reuse$U.$(OBJEXT)
reuse_LDADD = $(LDADD)
reuse_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tabs_SOURCES = tabs.c
tabs_OBJECTS = tabs$U.$(OBJEXT)
tabs_LDADD = $(LDADD)
tabs_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tacos_SOURCES = tacos.c
tacos_OBJECTS = tacos$U.$(OBJEXT)
tacos_LDADD = $(LDADD)
tacos_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tacosh_SOURCES = tacosh.c
tacosh_OBJECTS = tacosh$U.$(OBJEXT)
tacosh_LDADD = $(LDADD)
tacosh_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tadd_SOURCES = tadd.c
tadd_OBJECTS = tadd$U.$(OBJEXT)
tadd_LDADD = $(LDADD)
tadd_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tadd1sp_SOURCES = tadd1sp.c
tadd1sp_OBJECTS = tadd1sp$U.$(OBJEXT)
tadd1sp_LDADD = $(LDADD)
tadd1sp_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tadd_d_SOURCES = tadd_d.c
tadd_d_OBJECTS = tadd_d$U.$(OBJEXT)
tadd_d_LDADD = $(LDADD)
tadd_d_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tadd_ui_SOURCES = tadd_ui.c
tadd_ui_OBJECTS = tadd_ui$U.$(OBJEXT)
tadd_ui_LDADD = $(LDADD)
tadd_ui_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tagm_SOURCES = tagm.c
tagm_OBJECTS = tagm$U.$(OBJEXT)
tagm_LDADD = $(LDADD)
tagm_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tai_SOURCES = tai.c
tai_OBJECTS = tai$U.$(OBJEXT)
tai_LDADD = $(LDADD)
tai_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tasin_SOURCES = tasin.c
tasin_OBJECTS = tasin$U.$(OBJEXT)
tasin_LDADD = $(LDADD)
tasin_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tasinh_SOURCES = tasinh.c
tasinh_OBJECTS = tasinh$U.$(OBJEXT)
tasinh_LDADD = $(LDADD)
tasinh_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tatan_SOURCES = tatan.c
tatan_OBJECTS = tatan$U.$(OBJEXT)
tatan_LDADD = $(LDADD)
tatan_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tatanh_SOURCES = tatanh.c
tatanh_OBJECTS = tatanh$U.$(OBJEXT)
tatanh_LDADD = $(LDADD)
tatanh_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
taway_SOURCES = taway.c
taway_OBJECTS = taway$U.$(OBJEXT)
taway_LDADD = $(LDADD)
taway_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tbuildopt_SOURCES = tbuildopt.c
tbuildopt_OBJECTS = tbuildopt$U.$(OBJEXT)
tbuildopt_LDADD = $(LDADD)
tbuildopt_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tcan_round_SOURCES = tcan_round.c
tcan_round_OBJECTS = tcan_round$U.$(OBJEXT)
tcan_round_LDADD = $(LDADD)
tcan_round_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tcbrt_SOURCES = tcbrt.c
tcbrt_OBJECTS = tcbrt$U.$(OBJEXT)
tcbrt_LDADD = $(LDADD)
tcbrt_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tcheck_SOURCES = tcheck.c
tcheck_OBJECTS = tcheck$U.$(OBJEXT)
tcheck_LDADD = $(LDADD)
tcheck_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tcmp_SOURCES = tcmp.c
tcmp_OBJECTS = tcmp$U.$(OBJEXT)
tcmp_LDADD = $(LDADD)
tcmp_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tcmp2_SOURCES = tcmp2.c
tcmp2_OBJECTS = tcmp2$U.$(OBJEXT)
tcmp2_LDADD = $(LDADD)
tcmp2_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tcmp_d_SOURCES = tcmp_d.c
tcmp_d_OBJECTS = tcmp_d$U.$(OBJEXT)
tcmp_d_LDADD = $(LDADD)
tcmp_d_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tcmp_ld_SOURCES = tcmp_ld.c
tcmp_ld_OBJECTS = tcmp_ld$U.$(OBJEXT)
tcmp_ld_LDADD = $(LDADD)
tcmp_ld_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tcmp_ui_SOURCES = tcmp_ui.c
tcmp_ui_OBJECTS = tcmp_ui$U.$(OBJEXT)
tcmp_ui_LDADD = $(LDADD)
tcmp_ui_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tcmpabs_SOURCES = tcmpabs.c
tcmpabs_OBJECTS = tcmpabs$U.$(OBJEXT)
tcmpabs_LDADD = $(LDADD)
tcmpabs_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tcomparisons_SOURCES = tcomparisons.c
tcomparisons_OBJECTS = tcomparisons$U.$(OBJEXT)
tcomparisons_LDADD = $(LDADD)
tcomparisons_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tconst_catalan_SOURCES = tconst_catalan.c
tconst_catalan_OBJECTS = tconst_catalan$U.$(OBJEXT)
tconst_catalan_LDADD = $(LDADD)
tconst_catalan_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tconst_euler_SOURCES = tconst_euler.c
tconst_euler_OBJECTS = tconst_euler$U.$(OBJEXT)
tconst_euler_LDADD = $(LDADD)
tconst_euler_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tconst_log2_SOURCES = tconst_log2.c
tconst_log2_OBJECTS = tconst_log2$U.$(OBJEXT)
tconst_log2_LDADD = $(LDADD)
tconst_log2_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tconst_pi_SOURCES = tconst_pi.c
tconst_pi_OBJECTS = tconst_pi$U.$(OBJEXT)
tconst_pi_LDADD = $(LDADD)
tconst_pi_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tcopysign_SOURCES = tcopysign.c
tcopysign_OBJECTS = tcopysign$U.$(OBJEXT)
tcopysign_LDADD = $(LDADD)
tcopysign_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tcos_SOURCES = tcos.c
tcos_OBJECTS = tcos$U.$(OBJEXT)
tcos_LDADD = $(LDADD)
tcos_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tcosh_SOURCES = tcosh.c
tcosh_OBJECTS = tcosh$U.$(OBJEXT)
tcosh_LDADD = $(LDADD)
tcosh_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tcot_SOURCES = tcot.c
tcot_OBJECTS = tcot$U.$(OBJEXT)
tcot_LDADD = $(LDADD)
tcot_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tcoth_SOURCES = tcoth.c
tcoth_OBJECTS = tcoth$U.$(OBJEXT)
tcoth_LDADD = $(LDADD)
tcoth_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tcsc_SOURCES = tcsc.c
tcsc_OBJECTS = tcsc$U.$(OBJEXT)
tcsc_LDADD = $(LDADD)
tcsc_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tcsch_SOURCES = tcsch.c
tcsch_OBJECTS = tcsch$U.$(OBJEXT)
tcsch_LDADD = $(LDADD)
tcsch_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
td_div_SOURCES = td_div.c
td_div_OBJECTS = td_div$U.$(OBJEXT)
td_div_LDADD = $(LDADD)
td_div_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
td_sub_SOURCES = td_sub.c
td_sub_OBJECTS = td_sub$U.$(OBJEXT)
td_sub_LDADD = $(LDADD)
td_sub_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tdigamma_SOURCES = tdigamma.c
tdigamma_OBJECTS = tdigamma$U.$(OBJEXT)
tdigamma_LDADD = $(LDADD)
tdigamma_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tdim_SOURCES = tdim.c
tdim_OBJECTS = tdim$U.$(OBJEXT)
tdim_LDADD = $(LDADD)
tdim_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tdiv_SOURCES = tdiv.c
tdiv_OBJECTS = tdiv$U.$(OBJEXT)
tdiv_LDADD = $(LDADD)
tdiv_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tdiv_d_SOURCES = tdiv_d.c
tdiv_d_OBJECTS = tdiv_d$U.$(OBJEXT)
tdiv_d_LDADD = $(LDADD)
tdiv_d_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tdiv_ui_SOURCES = tdiv_ui.c
tdiv_ui_OBJECTS = tdiv_ui$U.$(OBJEXT)
tdiv_ui_LDADD = $(LDADD)
tdiv_ui_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
teint_SOURCES = teint.c
teint_OBJECTS = teint$U.$(OBJEXT)
teint_LDADD = $(LDADD)
teint_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
teq_SOURCES = teq.c
teq_OBJECTS = teq$U.$(OBJEXT)
teq_LDADD = $(LDADD)
teq_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
terf_SOURCES = terf.c
terf_OBJECTS = terf$U.$(OBJEXT)
terf_LDADD = $(LDADD)
terf_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
texceptions_SOURCES = texceptions.c
texceptions_OBJECTS = texceptions$U.$(OBJEXT)
texceptions_LDADD = $(LDADD)
texceptions_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
texp_SOURCES = texp.c
texp_OBJECTS = texp$U.$(OBJEXT)
texp_LDADD = $(LDADD)
texp_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
texp10_SOURCES = texp10.c
texp10_OBJECTS = texp10$U.$(OBJEXT)
texp10_LDADD = $(LDADD)
texp10_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
texp2_SOURCES = texp2.c
texp2_OBJECTS = texp2$U.$(OBJEXT)
texp2_LDADD = $(LDADD)
texp2_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
texpm1_SOURCES = texpm1.c
texpm1_OBJECTS = texpm1$U.$(OBJEXT)
texpm1_LDADD = $(LDADD)
texpm1_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tfactorial_SOURCES = tfactorial.c
tfactorial_OBJECTS = tfactorial$U.$(OBJEXT)
tfactorial_LDADD = $(LDADD)
tfactorial_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tfits_SOURCES = tfits.c
tfits_OBJECTS = tfits$U.$(OBJEXT)
tfits_LDADD = $(LDADD)
tfits_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tfma_SOURCES = tfma.c
tfma_OBJECTS = tfma$U.$(OBJEXT)
tfma_LDADD = $(LDADD)
tfma_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tfmod_SOURCES = tfmod.c
tfmod_OBJECTS = tfmod$U.$(OBJEXT)
tfmod_LDADD = $(LDADD)
tfmod_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tfms_SOURCES = tfms.c
tfms_OBJECTS = tfms$U.$(OBJEXT)
tfms_LDADD = $(LDADD)
tfms_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tfprintf_SOURCES = tfprintf.c
tfprintf_OBJECTS = tfprintf$U.$(OBJEXT)
tfprintf_LDADD = $(LDADD)
tfprintf_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tfrac_SOURCES = tfrac.c
tfrac_OBJECTS = tfrac$U.$(OBJEXT)
tfrac_LDADD = $(LDADD)
tfrac_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tgamma_SOURCES = tgamma.c
tgamma_OBJECTS = tgamma$U.$(OBJEXT)
tgamma_LDADD = $(LDADD)
tgamma_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tget_d_SOURCES = tget_d.c
tget_d_OBJECTS = tget_d$U.$(OBJEXT)
tget_d_LDADD = $(LDADD)
tget_d_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tget_d_2exp_SOURCES = tget_d_2exp.c
tget_d_2exp_OBJECTS = tget_d_2exp$U.$(OBJEXT)
tget_d_2exp_LDADD = $(LDADD)
tget_d_2exp_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tget_f_SOURCES = tget_f.c
tget_f_OBJECTS = tget_f$U.$(OBJEXT)
tget_f_LDADD = $(LDADD)
tget_f_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tget_flt_SOURCES = tget_flt.c
tget_flt_OBJECTS = tget_flt$U.$(OBJEXT)
tget_flt_LDADD = $(LDADD)
tget_flt_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tget_ld_2exp_SOURCES = tget_ld_2exp.c
tget_ld_2exp_OBJECTS = tget_ld_2exp$U.$(OBJEXT)
tget_ld_2exp_LDADD = $(LDADD)
tget_ld_2exp_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tget_set_d64_SOURCES = tget_set_d64.c
tget_set_d64_OBJECTS = tget_set_d64$U.$(OBJEXT)
tget_set_d64_LDADD = $(LDADD)
tget_set_d64_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tget_sj_SOURCES = tget_sj.c
tget_sj_OBJECTS = tget_sj$U.$(OBJEXT)
tget_sj_LDADD = $(LDADD)
tget_sj_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tget_str_SOURCES = tget_str.c
tget_str_OBJECTS = tget_str$U.$(OBJEXT)
tget_str_LDADD = $(LDADD)
tget_str_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tget_z_SOURCES = tget_z.c
tget_z_OBJECTS = tget_z$U.$(OBJEXT)
tget_z_LDADD = $(LDADD)
tget_z_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tgmpop_SOURCES = tgmpop.c
tgmpop_OBJECTS = tgmpop$U.$(OBJEXT)
tgmpop_LDADD = $(LDADD)
tgmpop_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
thyperbolic_SOURCES = thyperbolic.c
thyperbolic_OBJECTS = thyperbolic$U.$(OBJEXT)
thyperbolic_LDADD = $(LDADD)
thyperbolic_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
thypot_SOURCES = thypot.c
thypot_OBJECTS = thypot$U.$(OBJEXT)
thypot_LDADD = $(LDADD)
thypot_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tinits_SOURCES = tinits.c
tinits_OBJECTS = tinits$U.$(OBJEXT)
tinits_LDADD = $(LDADD)
tinits_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tinp_str_SOURCES = tinp_str.c
tinp_str_OBJECTS = tinp_str$U.$(OBJEXT)
tinp_str_LDADD = $(LDADD)
tinp_str_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tinternals_SOURCES = tinternals.c
tinternals_OBJECTS = tinternals$U.$(OBJEXT)
tinternals_LDADD = $(LDADD)
tinternals_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tisnan_SOURCES = tisnan.c
tisnan_OBJECTS = tisnan$U.$(OBJEXT)
tisnan_LDADD = $(LDADD)
tisnan_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tisqrt_SOURCES = tisqrt.c
tisqrt_OBJECTS = tisqrt$U.$(OBJEXT)
tisqrt_LDADD = $(LDADD)
tisqrt_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tj0_SOURCES = tj0.c
tj0_OBJECTS = tj0$U.$(OBJEXT)
tj0_LDADD = $(LDADD)
tj0_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tj1_SOURCES = tj1.c
tj1_OBJECTS = tj1$U.$(OBJEXT)
tj1_LDADD = $(LDADD)
tj1_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tjn_SOURCES = tjn.c
tjn_OBJECTS = tjn$U.$(OBJEXT)
tjn_LDADD = $(LDADD)
tjn_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tl2b_SOURCES = tl2b.c
tl2b_OBJECTS = tl2b$U.$(OBJEXT)
tl2b_LDADD = $(LDADD)
tl2b_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tlgamma_SOURCES = tlgamma.c
tlgamma_OBJECTS = tlgamma$U.$(OBJEXT)
tlgamma_LDADD = $(LDADD)
tlgamma_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tli2_SOURCES = tli2.c
tli2_OBJECTS = tli2$U.$(OBJEXT)
tli2_LDADD = $(LDADD)
tli2_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tlngamma_SOURCES = tlngamma.c
tlngamma_OBJECTS = tlngamma$U.$(OBJEXT)
tlngamma_LDADD = $(LDADD)
tlngamma_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tlog_SOURCES = tlog.c
tlog_OBJECTS = tlog$U.$(OBJEXT)
tlog_LDADD = $(LDADD)
tlog_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tlog10_SOURCES = tlog10.c
tlog10_OBJECTS = tlog10$U.$(OBJEXT)
tlog10_LDADD = $(LDADD)
tlog10_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tlog1p_SOURCES = tlog1p.c
tlog1p_OBJECTS = tlog1p$U.$(OBJEXT)
tlog1p_LDADD = $(LDADD)
tlog1p_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tlog2_SOURCES = tlog2.c
tlog2_OBJECTS = tlog2$U.$(OBJEXT)
tlog2_LDADD = $(LDADD)
tlog2_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tmin_prec_SOURCES = tmin_prec.c
tmin_prec_OBJECTS = tmin_prec$U.$(OBJEXT)
tmin_prec_LDADD = $(LDADD)
tmin_prec_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tminmax_SOURCES = tminmax.c
tminmax_OBJECTS = tminmax$U.$(OBJEXT)
tminmax_LDADD = $(LDADD)
tminmax_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tmodf_SOURCES = tmodf.c
tmodf_OBJECTS = tmodf$U.$(OBJEXT)
tmodf_LDADD = $(LDADD)
tmodf_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tmul_SOURCES = tmul.c
tmul_OBJECTS = tmul$U.$(OBJEXT)
tmul_LDADD = $(LDADD)
tmul_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tmul_2exp_SOURCES = tmul_2exp.c
tmul_2exp_OBJECTS = tmul_2exp$U.$(OBJEXT)
tmul_2exp_LDADD = $(LDADD)
tmul_2exp_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tmul_d_SOURCES = tmul_d.c
tmul_d_OBJECTS = tmul_d$U.$(OBJEXT)
tmul_d_LDADD = $(LDADD)
tmul_d_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tmul_ui_SOURCES = tmul_ui.c
tmul_ui_OBJECTS = tmul_ui$U.$(OBJEXT)
tmul_ui_LDADD = $(LDADD)
tmul_ui_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tnext_SOURCES = tnext.c
tnext_OBJECTS = tnext$U.$(OBJEXT)
tnext_LDADD = $(LDADD)
tnext_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tout_str_SOURCES = tout_str.c
tout_str_OBJECTS = tout_str$U.$(OBJEXT)
tout_str_LDADD = $(LDADD)
tout_str_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
toutimpl_SOURCES = toutimpl.c
toutimpl_OBJECTS = toutimpl$U.$(OBJEXT)
toutimpl_LDADD = $(LDADD)
toutimpl_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tpow_SOURCES = tpow.c
tpow_OBJECTS = tpow$U.$(OBJEXT)
tpow_LDADD = $(LDADD)
tpow_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tpow3_SOURCES = tpow3.c
tpow3_OBJECTS = tpow3$U.$(OBJEXT)
tpow3_LDADD = $(LDADD)
tpow3_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tpow_all_SOURCES = tpow_all.c
tpow_all_OBJECTS = tpow_all$U.$(OBJEXT)
tpow_all_LDADD = $(LDADD)
tpow_all_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tpow_z_SOURCES = tpow_z.c
tpow_z_OBJECTS = tpow_z$U.$(OBJEXT)
tpow_z_LDADD = $(LDADD)
tpow_z_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tprintf_SOURCES = tprintf.c
tprintf_OBJECTS = tprintf$U.$(OBJEXT)
tprintf_LDADD = $(LDADD)
tprintf_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
trandom_SOURCES = trandom.c
trandom_OBJECTS = trandom$U.$(OBJEXT)
trandom_LDADD = $(LDADD)
trandom_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
trec_sqrt_SOURCES = trec_sqrt.c
trec_sqrt_OBJECTS = trec_sqrt$U.$(OBJEXT)
trec_sqrt_LDADD = $(LDADD)
trec_sqrt_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tremquo_SOURCES = tremquo.c
tremquo_OBJECTS = tremquo$U.$(OBJEXT)
tremquo_LDADD = $(LDADD)
tremquo_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
trint_SOURCES = trint.c
trint_OBJECTS = trint$U.$(OBJEXT)
trint_LDADD = $(LDADD)
trint_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
troot_SOURCES = troot.c
troot_OBJECTS = troot$U.$(OBJEXT)
troot_LDADD = $(LDADD)
troot_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tround_prec_SOURCES = tround_prec.c
tround_prec_OBJECTS = tround_prec$U.$(OBJEXT)
tround_prec_LDADD = $(LDADD)
tround_prec_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tsec_SOURCES = tsec.c
tsec_OBJECTS = tsec$U.$(OBJEXT)
tsec_LDADD = $(LDADD)
tsec_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tsech_SOURCES = tsech.c
tsech_OBJECTS = tsech$U.$(OBJEXT)
tsech_LDADD = $(LDADD)
tsech_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tset_SOURCES = tset.c
tset_OBJECTS = tset$U.$(OBJEXT)
tset_LDADD = $(LDADD)
tset_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tset_d_SOURCES = tset_d.c
tset_d_OBJECTS = tset_d$U.$(OBJEXT)
tset_d_LDADD = $(LDADD)
tset_d_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tset_exp_SOURCES = tset_exp.c
tset_exp_OBJECTS = tset_exp$U.$(OBJEXT)
tset_exp_LDADD = $(LDADD)
tset_exp_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tset_f_SOURCES = tset_f.c
tset_f_OBJECTS = tset_f$U.$(OBJEXT)
tset_f_LDADD = $(LDADD)
tset_f_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tset_ld_SOURCES = tset_ld.c
tset_ld_OBJECTS = tset_ld$U.$(OBJEXT)
tset_ld_LDADD = $(LDADD)
tset_ld_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tset_q_SOURCES = tset_q.c
tset_q_OBJECTS = tset_q$U.$(OBJEXT)
tset_q_LDADD = $(LDADD)
tset_q_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tset_si_SOURCES = tset_si.c
tset_si_OBJECTS = tset_si$U.$(OBJEXT)
tset_si_LDADD = $(LDADD)
tset_si_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tset_sj_SOURCES = tset_sj.c
tset_sj_OBJECTS = tset_sj$U.$(OBJEXT)
tset_sj_LDADD = $(LDADD)
tset_sj_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tset_str_SOURCES = tset_str.c
tset_str_OBJECTS = tset_str$U.$(OBJEXT)
tset_str_LDADD = $(LDADD)
tset_str_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tset_z_SOURCES = tset_z.c
tset_z_OBJECTS = tset_z$U.$(OBJEXT)
tset_z_LDADD = $(LDADD)
tset_z_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tset_z_exp_SOURCES = tset_z_exp.c
tset_z_exp_OBJECTS = tset_z_exp$U.$(OBJEXT)
tset_z_exp_LDADD = $(LDADD)
tset_z_exp_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tsgn_SOURCES = tsgn.c
tsgn_OBJECTS = tsgn$U.$(OBJEXT)
tsgn_LDADD = $(LDADD)
tsgn_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tsi_op_SOURCES = tsi_op.c
tsi_op_OBJECTS = tsi_op$U.$(OBJEXT)
tsi_op_LDADD = $(LDADD)
tsi_op_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tsin_SOURCES = tsin.c
tsin_OBJECTS = tsin$U.$(OBJEXT)
tsin_LDADD = $(LDADD)
tsin_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tsin_cos_SOURCES = tsin_cos.c
tsin_cos_OBJECTS = tsin_cos$U.$(OBJEXT)
tsin_cos_LDADD = $(LDADD)
tsin_cos_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tsinh_SOURCES = tsinh.c
tsinh_OBJECTS = tsinh$U.$(OBJEXT)
tsinh_LDADD = $(LDADD)
tsinh_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tsinh_cosh_SOURCES = tsinh_cosh.c
tsinh_cosh_OBJECTS = tsinh_cosh$U.$(OBJEXT)
tsinh_cosh_LDADD = $(LDADD)
tsinh_cosh_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tsprintf_SOURCES = tsprintf.c
tsprintf_OBJECTS = tsprintf$U.$(OBJEXT)
tsprintf_LDADD = $(LDADD)
tsprintf_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tsqr_SOURCES = tsqr.c
tsqr_OBJECTS = tsqr$U.$(OBJEXT)
tsqr_LDADD = $(LDADD)
tsqr_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tsqrt_SOURCES = tsqrt.c
tsqrt_OBJECTS = tsqrt$U.$(OBJEXT)
tsqrt_LDADD = $(LDADD)
tsqrt_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tsqrt_ui_SOURCES = tsqrt_ui.c
tsqrt_ui_OBJECTS = tsqrt_ui$U.$(OBJEXT)
tsqrt_ui_LDADD = $(LDADD)
tsqrt_ui_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tstckintc_SOURCES = tstckintc.c
tstckintc_OBJECTS = tstckintc$U.$(OBJEXT)
tstckintc_LDADD = $(LDADD)
tstckintc_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tstrtofr_SOURCES = tstrtofr.c
tstrtofr_OBJECTS = tstrtofr$U.$(OBJEXT)
tstrtofr_LDADD = $(LDADD)
tstrtofr_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tsub_SOURCES = tsub.c
tsub_OBJECTS = tsub$U.$(OBJEXT)
tsub_LDADD = $(LDADD)
tsub_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tsub1sp_SOURCES = tsub1sp.c
tsub1sp_OBJECTS = tsub1sp$U.$(OBJEXT)
tsub1sp_LDADD = $(LDADD)
tsub1sp_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tsub_d_SOURCES = tsub_d.c
tsub_d_OBJECTS = tsub_d$U.$(OBJEXT)
tsub_d_LDADD = $(LDADD)
tsub_d_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tsub_ui_SOURCES = tsub_ui.c
tsub_ui_OBJECTS = tsub_ui$U.$(OBJEXT)
tsub_ui_LDADD = $(LDADD)
tsub_ui_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tsubnormal_SOURCES = tsubnormal.c
tsubnormal_OBJECTS = tsubnormal$U.$(OBJEXT)
tsubnormal_LDADD = $(LDADD)
tsubnormal_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tsum_SOURCES = tsum.c
tsum_OBJECTS = tsum$U.$(OBJEXT)
tsum_LDADD = $(LDADD)
tsum_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tswap_SOURCES = tswap.c
tswap_OBJECTS = tswap$U.$(OBJEXT)
tswap_LDADD = $(LDADD)
tswap_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
ttan_SOURCES = ttan.c
ttan_OBJECTS = ttan$U.$(OBJEXT)
ttan_LDADD = $(LDADD)
ttan_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
ttanh_SOURCES = ttanh.c
ttanh_OBJECTS = ttanh$U.$(OBJEXT)
ttanh_LDADD = $(LDADD)
ttanh_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
ttrunc_SOURCES = ttrunc.c
ttrunc_OBJECTS = ttrunc$U.$(OBJEXT)
ttrunc_LDADD = $(LDADD)
ttrunc_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tui_div_SOURCES = tui_div.c
tui_div_OBJECTS = tui_div$U.$(OBJEXT)
tui_div_LDADD = $(LDADD)
tui_div_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tui_pow_SOURCES = tui_pow.c
tui_pow_OBJECTS = tui_pow$U.$(OBJEXT)
tui_pow_LDADD = $(LDADD)
tui_pow_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tui_sub_SOURCES = tui_sub.c
tui_sub_OBJECTS = tui_sub$U.$(OBJEXT)
tui_sub_LDADD = $(LDADD)
tui_sub_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
turandom_SOURCES = turandom.c
turandom_OBJECTS = turandom$U.$(OBJEXT)
turandom_LDADD = $(LDADD)
turandom_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tversion_SOURCES = tversion.c
tversion_OBJECTS = tversion$U.$(OBJEXT)
tversion_LDADD = $(LDADD)
tversion_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
ty0_SOURCES = ty0.c
ty0_OBJECTS = ty0$U.$(OBJEXT)
ty0_LDADD = $(LDADD)
ty0_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
ty1_SOURCES = ty1.c
ty1_OBJECTS = ty1$U.$(OBJEXT)
ty1_LDADD = $(LDADD)
ty1_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tyn_SOURCES = tyn.c
tyn_OBJECTS = tyn$U.$(OBJEXT)
tyn_LDADD = $(LDADD)
tyn_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tzeta_SOURCES = tzeta.c
tzeta_OBJECTS = tzeta$U.$(OBJEXT)
tzeta_LDADD = $(LDADD)
tzeta_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
tzeta_ui_SOURCES = tzeta_ui.c
tzeta_ui_OBJECTS = tzeta_ui$U.$(OBJEXT)
tzeta_ui_LDADD = $(LDADD)
tzeta_ui_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/libmpfr.la
DEFAULT_INCLUDES = -I.@am__isrc@
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libfrtests_la_SOURCES) mpf_compat.c mpfr_compat.c reuse.c \
	tabs.c tacos.c tacosh.c tadd.c tadd1sp.c tadd_d.c tadd_ui.c \
	tagm.c tai.c tasin.c tasinh.c tatan.c tatanh.c taway.c \
	tbuildopt.c tcan_round.c tcbrt.c tcheck.c tcmp.c tcmp2.c \
	tcmp_d.c tcmp_ld.c tcmp_ui.c tcmpabs.c tcomparisons.c \
	tconst_catalan.c tconst_euler.c tconst_log2.c tconst_pi.c \
	tcopysign.c tcos.c tcosh.c tcot.c tcoth.c tcsc.c tcsch.c \
	td_div.c td_sub.c tdigamma.c tdim.c tdiv.c tdiv_d.c tdiv_ui.c \
	teint.c teq.c terf.c texceptions.c texp.c texp10.c texp2.c \
	texpm1.c tfactorial.c tfits.c tfma.c tfmod.c tfms.c tfprintf.c \
	tfrac.c tgamma.c tget_d.c tget_d_2exp.c tget_f.c tget_flt.c \
	tget_ld_2exp.c tget_set_d64.c tget_sj.c tget_str.c tget_z.c \
	tgmpop.c thyperbolic.c thypot.c tinits.c tinp_str.c \
	tinternals.c tisnan.c tisqrt.c tj0.c tj1.c tjn.c tl2b.c \
	tlgamma.c tli2.c tlngamma.c tlog.c tlog10.c tlog1p.c tlog2.c \
	tmin_prec.c tminmax.c tmodf.c tmul.c tmul_2exp.c tmul_d.c \
	tmul_ui.c tnext.c tout_str.c toutimpl.c tpow.c tpow3.c \
	tpow_all.c tpow_z.c tprintf.c trandom.c trec_sqrt.c tremquo.c \
	trint.c troot.c tround_prec.c tsec.c tsech.c tset.c tset_d.c \
	tset_exp.c tset_f.c tset_ld.c tset_q.c tset_si.c tset_sj.c \
	tset_str.c tset_z.c tset_z_exp.c tsgn.c tsi_op.c tsin.c \
	tsin_cos.c tsinh.c tsinh_cosh.c tsprintf.c tsqr.c tsqrt.c \
	tsqrt_ui.c tstckintc.c tstrtofr.c tsub.c tsub1sp.c tsub_d.c \
	tsub_ui.c tsubnormal.c tsum.c tswap.c ttan.c ttanh.c ttrunc.c \
	tui_div.c tui_pow.c tui_sub.c turandom.c tversion.c ty0.c \
	ty1.c tyn.c tzeta.c tzeta_ui.c
DIST_SOURCES = $(libfrtests_la_SOURCES) mpf_compat.c mpfr_compat.c \
	reuse.c tabs.c tacos.c tacosh.c tadd.c tadd1sp.c tadd_d.c \
	tadd_ui.c tagm.c tai.c tasin.c tasinh.c tatan.c tatanh.c \
	taway.c tbuildopt.c tcan_round.c tcbrt.c tcheck.c tcmp.c \
	tcmp2.c tcmp_d.c tcmp_ld.c tcmp_ui.c tcmpabs.c tcomparisons.c \
	tconst_catalan.c tconst_euler.c tconst_log2.c tconst_pi.c \
	tcopysign.c tcos.c tcosh.c tcot.c tcoth.c tcsc.c tcsch.c \
	td_div.c td_sub.c tdigamma.c tdim.c tdiv.c tdiv_d.c tdiv_ui.c \
	teint.c teq.c terf.c texceptions.c texp.c texp10.c texp2.c \
	texpm1.c tfactorial.c tfits.c tfma.c tfmod.c tfms.c tfprintf.c \
	tfrac.c tgamma.c tget_d.c tget_d_2exp.c tget_f.c tget_flt.c \
	tget_ld_2exp.c tget_set_d64.c tget_sj.c tget_str.c tget_z.c \
	tgmpop.c thyperbolic.c thypot.c tinits.c tinp_str.c \
	tinternals.c tisnan.c tisqrt.c tj0.c tj1.c tjn.c tl2b.c \
	tlgamma.c tli2.c tlngamma.c tlog.c tlog10.c tlog1p.c tlog2.c \
	tmin_prec.c tminmax.c tmodf.c tmul.c tmul_2exp.c tmul_d.c \
	tmul_ui.c tnext.c tout_str.c toutimpl.c tpow.c tpow3.c \
	tpow_all.c tpow_z.c tprintf.c trandom.c trec_sqrt.c tremquo.c \
	trint.c troot.c tround_prec.c tsec.c tsech.c tset.c tset_d.c \
	tset_exp.c tset_f.c tset_ld.c tset_q.c tset_si.c tset_sj.c \
	tset_str.c tset_z.c tset_z_exp.c tsgn.c tsi_op.c tsin.c \
	tsin_cos.c tsinh.c tsinh_cosh.c tsprintf.c tsqr.c tsqrt.c \
	tsqrt_ui.c tstckintc.c tstrtofr.c tsub.c tsub1sp.c tsub_d.c \
	tsub_ui.c tsubnormal.c tsum.c tswap.c ttan.c ttanh.c ttrunc.c \
	tui_div.c tui_pow.c tui_sub.c turandom.c tversion.c ty0.c \
	ty1.c tyn.c tzeta.c tzeta_ui.c
ETAGS = etags
CTAGS = ctags
am__tty_colors = \
red=; grn=; lgn=; blu=; std=
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
ALLOCA = @ALLOCA@
AMTAR = @AMTAR@
AR = @AR@
AS = @AS@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
MPFR_LIBM = @MPFR_LIBM@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
U = @U@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
lt_ECHO = @lt_ECHO@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
AUTOMAKE_OPTIONS = 1.6 gnu $(top_builddir)/ansi2knr
EXTRA_DIST = tgeneric.c tgeneric_ui.c mpf_compat.h inp_str.data tmul.dat
LDADD = libfrtests.la $(MPFR_LIBM) $(top_builddir)/libmpfr.la
INCLUDES = -I$(top_srcdir) -I$(top_builddir)

# LOADLIBES (documented in the "GNU make" manual and equivalent to LDLIBS)
# enables to compile a program foo.c in the test directory by simply doing
# "make foo".
LOADLIBES = $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CFLAGS) $(top_builddir)/tests/.libs/libfrtests.a $(top_builddir)/.libs/libmpfr.a $(LIBS) $(MPFR_LIBM)
check_LTLIBRARIES = libfrtests.la
libfrtests_la_SOURCES = mpfr-test.h memory.c rnd_mode.c tests.c cmp_str.c random2.c
TESTS = $(check_PROGRAMS)
TESTS_ENVIRONMENT = MPFR_QUIET=1
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu tests/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu tests/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkLTLIBRARIES:
	-test -z "$(check_LTLIBRARIES)" || rm -f $(check_LTLIBRARIES)
	@list='$(check_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libfrtests.la: $(libfrtests_la_OBJECTS) $(libfrtests_la_DEPENDENCIES) 
	$(LINK)  $(libfrtests_la_OBJECTS) $(libfrtests_la_LIBADD) $(LIBS)

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
mpf_compat$(EXEEXT): $(mpf_compat_OBJECTS) $(mpf_compat_DEPENDENCIES) 
	@rm -f mpf_compat$(EXEEXT)
	$(LINK) $(mpf_compat_OBJECTS) $(mpf_compat_LDADD) $(LIBS)
mpfr_compat$(EXEEXT): $(mpfr_compat_OBJECTS) $(mpfr_compat_DEPENDENCIES) 
	@rm -f mpfr_compat$(EXEEXT)
	$(LINK) $(mpfr_compat_OBJECTS) $(mpfr_compat_LDADD) $(LIBS)
reuse$(EXEEXT): $(reuse_OBJECTS) $(reuse_DEPENDENCIES) 
	@rm -f reuse$(EXEEXT)
	$(LINK) $(reuse_OBJECTS) $(reuse_LDADD) $(LIBS)
tabs$(EXEEXT): $(tabs_OBJECTS) $(tabs_DEPENDENCIES) 
	@rm -f tabs$(EXEEXT)
	$(LINK) $(tabs_OBJECTS) $(tabs_LDADD) $(LIBS)
tacos$(EXEEXT): $(tacos_OBJECTS) $(tacos_DEPENDENCIES) 
	@rm -f tacos$(EXEEXT)
	$(LINK) $(tacos_OBJECTS) $(tacos_LDADD) $(LIBS)
tacosh$(EXEEXT): $(tacosh_OBJECTS) $(tacosh_DEPENDENCIES) 
	@rm -f tacosh$(EXEEXT)
	$(LINK) $(tacosh_OBJECTS) $(tacosh_LDADD) $(LIBS)
tadd$(EXEEXT): $(tadd_OBJECTS) $(tadd_DEPENDENCIES) 
	@rm -f tadd$(EXEEXT)
	$(LINK) $(tadd_OBJECTS) $(tadd_LDADD) $(LIBS)
tadd1sp$(EXEEXT): $(tadd1sp_OBJECTS) $(tadd1sp_DEPENDENCIES) 
	@rm -f tadd1sp$(EXEEXT)
	$(LINK) $(tadd1sp_OBJECTS) $(tadd1sp_LDADD) $(LIBS)
tadd_d$(EXEEXT): $(tadd_d_OBJECTS) $(tadd_d_DEPENDENCIES) 
	@rm -f tadd_d$(EXEEXT)
	$(LINK) $(tadd_d_OBJECTS) $(tadd_d_LDADD) $(LIBS)
tadd_ui$(EXEEXT): $(tadd_ui_OBJECTS) $(tadd_ui_DEPENDENCIES) 
	@rm -f tadd_ui$(EXEEXT)
	$(LINK) $(tadd_ui_OBJECTS) $(tadd_ui_LDADD) $(LIBS)
tagm$(EXEEXT): $(tagm_OBJECTS) $(tagm_DEPENDENCIES) 
	@rm -f tagm$(EXEEXT)
	$(LINK) $(tagm_OBJECTS) $(tagm_LDADD) $(LIBS)
tai$(EXEEXT): $(tai_OBJECTS) $(tai_DEPENDENCIES) 
	@rm -f tai$(EXEEXT)
	$(LINK) $(tai_OBJECTS) $(tai_LDADD) $(LIBS)
tasin$(EXEEXT): $(tasin_OBJECTS) $(tasin_DEPENDENCIES) 
	@rm -f tasin$(EXEEXT)
	$(LINK) $(tasin_OBJECTS) $(tasin_LDADD) $(LIBS)
tasinh$(EXEEXT): $(tasinh_OBJECTS) $(tasinh_DEPENDENCIES) 
	@rm -f tasinh$(EXEEXT)
	$(LINK) $(tasinh_OBJECTS) $(tasinh_LDADD) $(LIBS)
tatan$(EXEEXT): $(tatan_OBJECTS) $(tatan_DEPENDENCIES) 
	@rm -f tatan$(EXEEXT)
	$(LINK) $(tatan_OBJECTS) $(tatan_LDADD) $(LIBS)
tatanh$(EXEEXT): $(tatanh_OBJECTS) $(tatanh_DEPENDENCIES) 
	@rm -f tatanh$(EXEEXT)
	$(LINK) $(tatanh_OBJECTS) $(tatanh_LDADD) $(LIBS)
taway$(EXEEXT): $(taway_OBJECTS) $(taway_DEPENDENCIES) 
	@rm -f taway$(EXEEXT)
	$(LINK) $(taway_OBJECTS) $(taway_LDADD) $(LIBS)
tbuildopt$(EXEEXT): $(tbuildopt_OBJECTS) $(tbuildopt_DEPENDENCIES) 
	@rm -f tbuildopt$(EXEEXT)
	$(LINK) $(tbuildopt_OBJECTS) $(tbuildopt_LDADD) $(LIBS)
tcan_round$(EXEEXT): $(tcan_round_OBJECTS) $(tcan_round_DEPENDENCIES) 
	@rm -f tcan_round$(EXEEXT)
	$(LINK) $(tcan_round_OBJECTS) $(tcan_round_LDADD) $(LIBS)
tcbrt$(EXEEXT): $(tcbrt_OBJECTS) $(tcbrt_DEPENDENCIES) 
	@rm -f tcbrt$(EXEEXT)
	$(LINK) $(tcbrt_OBJECTS) $(tcbrt_LDADD) $(LIBS)
tcheck$(EXEEXT): $(tcheck_OBJECTS) $(tcheck_DEPENDENCIES) 
	@rm -f tcheck$(EXEEXT)
	$(LINK) $(tcheck_OBJECTS) $(tcheck_LDADD) $(LIBS)
tcmp$(EXEEXT): $(tcmp_OBJECTS) $(tcmp_DEPENDENCIES) 
	@rm -f tcmp$(EXEEXT)
	$(LINK) $(tcmp_OBJECTS) $(tcmp_LDADD) $(LIBS)
tcmp2$(EXEEXT): $(tcmp2_OBJECTS) $(tcmp2_DEPENDENCIES) 
	@rm -f tcmp2$(EXEEXT)
	$(LINK) $(tcmp2_OBJECTS) $(tcmp2_LDADD) $(LIBS)
tcmp_d$(EXEEXT): $(tcmp_d_OBJECTS) $(tcmp_d_DEPENDENCIES) 
	@rm -f tcmp_d$(EXEEXT)
	$(LINK) $(tcmp_d_OBJECTS) $(tcmp_d_LDADD) $(LIBS)
tcmp_ld$(EXEEXT): $(tcmp_ld_OBJECTS) $(tcmp_ld_DEPENDENCIES) 
	@rm -f tcmp_ld$(EXEEXT)
	$(LINK) $(tcmp_ld_OBJECTS) $(tcmp_ld_LDADD) $(LIBS)
tcmp_ui$(EXEEXT): $(tcmp_ui_OBJECTS) $(tcmp_ui_DEPENDENCIES) 
	@rm -f tcmp_ui$(EXEEXT)
	$(LINK) $(tcmp_ui_OBJECTS) $(tcmp_ui_LDADD) $(LIBS)
tcmpabs$(EXEEXT): $(tcmpabs_OBJECTS) $(tcmpabs_DEPENDENCIES) 
	@rm -f tcmpabs$(EXEEXT)
	$(LINK) $(tcmpabs_OBJECTS) $(tcmpabs_LDADD) $(LIBS)
tcomparisons$(EXEEXT): $(tcomparisons_OBJECTS) $(tcomparisons_DEPENDENCIES) 
	@rm -f tcomparisons$(EXEEXT)
	$(LINK) $(tcomparisons_OBJECTS) $(tcomparisons_LDADD) $(LIBS)
tconst_catalan$(EXEEXT): $(tconst_catalan_OBJECTS) $(tconst_catalan_DEPENDENCIES) 
	@rm -f tconst_catalan$(EXEEXT)
	$(LINK) $(tconst_catalan_OBJECTS) $(tconst_catalan_LDADD) $(LIBS)
tconst_euler$(EXEEXT): $(tconst_euler_OBJECTS) $(tconst_euler_DEPENDENCIES) 
	@rm -f tconst_euler$(EXEEXT)
	$(LINK) $(tconst_euler_OBJECTS) $(tconst_euler_LDADD) $(LIBS)
tconst_log2$(EXEEXT): $(tconst_log2_OBJECTS) $(tconst_log2_DEPENDENCIES) 
	@rm -f tconst_log2$(EXEEXT)
	$(LINK) $(tconst_log2_OBJECTS) $(tconst_log2_LDADD) $(LIBS)
tconst_pi$(EXEEXT): $(tconst_pi_OBJECTS) $(tconst_pi_DEPENDENCIES) 
	@rm -f tconst_pi$(EXEEXT)
	$(LINK) $(tconst_pi_OBJECTS) $(tconst_pi_LDADD) $(LIBS)
tcopysign$(EXEEXT): $(tcopysign_OBJECTS) $(tcopysign_DEPENDENCIES) 
	@rm -f tcopysign$(EXEEXT)
	$(LINK) $(tcopysign_OBJECTS) $(tcopysign_LDADD) $(LIBS)
tcos$(EXEEXT): $(tcos_OBJECTS) $(tcos_DEPENDENCIES) 
	@rm -f tcos$(EXEEXT)
	$(LINK) $(tcos_OBJECTS) $(tcos_LDADD) $(LIBS)
tcosh$(EXEEXT): $(tcosh_OBJECTS) $(tcosh_DEPENDENCIES) 
	@rm -f tcosh$(EXEEXT)
	$(LINK) $(tcosh_OBJECTS) $(tcosh_LDADD) $(LIBS)
tcot$(EXEEXT): $(tcot_OBJECTS) $(tcot_DEPENDENCIES) 
	@rm -f tcot$(EXEEXT)
	$(LINK) $(tcot_OBJECTS) $(tcot_LDADD) $(LIBS)
tcoth$(EXEEXT): $(tcoth_OBJECTS) $(tcoth_DEPENDENCIES) 
	@rm -f tcoth$(EXEEXT)
	$(LINK) $(tcoth_OBJECTS) $(tcoth_LDADD) $(LIBS)
tcsc$(EXEEXT): $(tcsc_OBJECTS) $(tcsc_DEPENDENCIES) 
	@rm -f tcsc$(EXEEXT)
	$(LINK) $(tcsc_OBJECTS) $(tcsc_LDADD) $(LIBS)
tcsch$(EXEEXT): $(tcsch_OBJECTS) $(tcsch_DEPENDENCIES) 
	@rm -f tcsch$(EXEEXT)
	$(LINK) $(tcsch_OBJECTS) $(tcsch_LDADD) $(LIBS)
td_div$(EXEEXT): $(td_div_OBJECTS) $(td_div_DEPENDENCIES) 
	@rm -f td_div$(EXEEXT)
	$(LINK) $(td_div_OBJECTS) $(td_div_LDADD) $(LIBS)
td_sub$(EXEEXT): $(td_sub_OBJECTS) $(td_sub_DEPENDENCIES) 
	@rm -f td_sub$(EXEEXT)
	$(LINK) $(td_sub_OBJECTS) $(td_sub_LDADD) $(LIBS)
tdigamma$(EXEEXT): $(tdigamma_OBJECTS) $(tdigamma_DEPENDENCIES) 
	@rm -f tdigamma$(EXEEXT)
	$(LINK) $(tdigamma_OBJECTS) $(tdigamma_LDADD) $(LIBS)
tdim$(EXEEXT): $(tdim_OBJECTS) $(tdim_DEPENDENCIES) 
	@rm -f tdim$(EXEEXT)
	$(LINK) $(tdim_OBJECTS) $(tdim_LDADD) $(LIBS)
tdiv$(EXEEXT): $(tdiv_OBJECTS) $(tdiv_DEPENDENCIES) 
	@rm -f tdiv$(EXEEXT)
	$(LINK) $(tdiv_OBJECTS) $(tdiv_LDADD) $(LIBS)
tdiv_d$(EXEEXT): $(tdiv_d_OBJECTS) $(tdiv_d_DEPENDENCIES) 
	@rm -f tdiv_d$(EXEEXT)
	$(LINK) $(tdiv_d_OBJECTS) $(tdiv_d_LDADD) $(LIBS)
tdiv_ui$(EXEEXT): $(tdiv_ui_OBJECTS) $(tdiv_ui_DEPENDENCIES) 
	@rm -f tdiv_ui$(EXEEXT)
	$(LINK) $(tdiv_ui_OBJECTS) $(tdiv_ui_LDADD) $(LIBS)
teint$(EXEEXT): $(teint_OBJECTS) $(teint_DEPENDENCIES) 
	@rm -f teint$(EXEEXT)
	$(LINK) $(teint_OBJECTS) $(teint_LDADD) $(LIBS)
teq$(EXEEXT): $(teq_OBJECTS) $(teq_DEPENDENCIES) 
	@rm -f teq$(EXEEXT)
	$(LINK) $(teq_OBJECTS) $(teq_LDADD) $(LIBS)
terf$(EXEEXT): $(terf_OBJECTS) $(terf_DEPENDENCIES) 
	@rm -f terf$(EXEEXT)
	$(LINK) $(terf_OBJECTS) $(terf_LDADD) $(LIBS)
texceptions$(EXEEXT): $(texceptions_OBJECTS) $(texceptions_DEPENDENCIES) 
	@rm -f texceptions$(EXEEXT)
	$(LINK) $(texceptions_OBJECTS) $(texceptions_LDADD) $(LIBS)
texp$(EXEEXT): $(texp_OBJECTS) $(texp_DEPENDENCIES) 
	@rm -f texp$(EXEEXT)
	$(LINK) $(texp_OBJECTS) $(texp_LDADD) $(LIBS)
texp10$(EXEEXT): $(texp10_OBJECTS) $(texp10_DEPENDENCIES) 
	@rm -f texp10$(EXEEXT)
	$(LINK) $(texp10_OBJECTS) $(texp10_LDADD) $(LIBS)
texp2$(EXEEXT): $(texp2_OBJECTS) $(texp2_DEPENDENCIES) 
	@rm -f texp2$(EXEEXT)
	$(LINK) $(texp2_OBJECTS) $(texp2_LDADD) $(LIBS)
texpm1$(EXEEXT): $(texpm1_OBJECTS) $(texpm1_DEPENDENCIES) 
	@rm -f texpm1$(EXEEXT)
	$(LINK) $(texpm1_OBJECTS) $(texpm1_LDADD) $(LIBS)
tfactorial$(EXEEXT): $(tfactorial_OBJECTS) $(tfactorial_DEPENDENCIES) 
	@rm -f tfactorial$(EXEEXT)
	$(LINK) $(tfactorial_OBJECTS) $(tfactorial_LDADD) $(LIBS)
tfits$(EXEEXT): $(tfits_OBJECTS) $(tfits_DEPENDENCIES) 
	@rm -f tfits$(EXEEXT)
	$(LINK) $(tfits_OBJECTS) $(tfits_LDADD) $(LIBS)
tfma$(EXEEXT): $(tfma_OBJECTS) $(tfma_DEPENDENCIES) 
	@rm -f tfma$(EXEEXT)
	$(LINK) $(tfma_OBJECTS) $(tfma_LDADD) $(LIBS)
tfmod$(EXEEXT): $(tfmod_OBJECTS) $(tfmod_DEPENDENCIES) 
	@rm -f tfmod$(EXEEXT)
	$(LINK) $(tfmod_OBJECTS) $(tfmod_LDADD) $(LIBS)
tfms$(EXEEXT): $(tfms_OBJECTS) $(tfms_DEPENDENCIES) 
	@rm -f tfms$(EXEEXT)
	$(LINK) $(tfms_OBJECTS) $(tfms_LDADD) $(LIBS)
tfprintf$(EXEEXT): $(tfprintf_OBJECTS) $(tfprintf_DEPENDENCIES) 
	@rm -f tfprintf$(EXEEXT)
	$(LINK) $(tfprintf_OBJECTS) $(tfprintf_LDADD) $(LIBS)
tfrac$(EXEEXT): $(tfrac_OBJECTS) $(tfrac_DEPENDENCIES) 
	@rm -f tfrac$(EXEEXT)
	$(LINK) $(tfrac_OBJECTS) $(tfrac_LDADD) $(LIBS)
tgamma$(EXEEXT): $(tgamma_OBJECTS) $(tgamma_DEPENDENCIES) 
	@rm -f tgamma$(EXEEXT)
	$(LINK) $(tgamma_OBJECTS) $(tgamma_LDADD) $(LIBS)
tget_d$(EXEEXT): $(tget_d_OBJECTS) $(tget_d_DEPENDENCIES) 
	@rm -f tget_d$(EXEEXT)
	$(LINK) $(tget_d_OBJECTS) $(tget_d_LDADD) $(LIBS)
tget_d_2exp$(EXEEXT): $(tget_d_2exp_OBJECTS) $(tget_d_2exp_DEPENDENCIES) 
	@rm -f tget_d_2exp$(EXEEXT)
	$(LINK) $(tget_d_2exp_OBJECTS) $(tget_d_2exp_LDADD) $(LIBS)
tget_f$(EXEEXT): $(tget_f_OBJECTS) $(tget_f_DEPENDENCIES) 
	@rm -f tget_f$(EXEEXT)
	$(LINK) $(tget_f_OBJECTS) $(tget_f_LDADD) $(LIBS)
tget_flt$(EXEEXT): $(tget_flt_OBJECTS) $(tget_flt_DEPENDENCIES) 
	@rm -f tget_flt$(EXEEXT)
	$(LINK) $(tget_flt_OBJECTS) $(tget_flt_LDADD) $(LIBS)
tget_ld_2exp$(EXEEXT): $(tget_ld_2exp_OBJECTS) $(tget_ld_2exp_DEPENDENCIES) 
	@rm -f tget_ld_2exp$(EXEEXT)
	$(LINK) $(tget_ld_2exp_OBJECTS) $(tget_ld_2exp_LDADD) $(LIBS)
tget_set_d64$(EXEEXT): $(tget_set_d64_OBJECTS) $(tget_set_d64_DEPENDENCIES) 
	@rm -f tget_set_d64$(EXEEXT)
	$(LINK) $(tget_set_d64_OBJECTS) $(tget_set_d64_LDADD) $(LIBS)
tget_sj$(EXEEXT): $(tget_sj_OBJECTS) $(tget_sj_DEPENDENCIES) 
	@rm -f tget_sj$(EXEEXT)
	$(LINK) $(tget_sj_OBJECTS) $(tget_sj_LDADD) $(LIBS)
tget_str$(EXEEXT): $(tget_str_OBJECTS) $(tget_str_DEPENDENCIES) 
	@rm -f tget_str$(EXEEXT)
	$(LINK) $(tget_str_OBJECTS) $(tget_str_LDADD) $(LIBS)
tget_z$(EXEEXT): $(tget_z_OBJECTS) $(tget_z_DEPENDENCIES) 
	@rm -f tget_z$(EXEEXT)
	$(LINK) $(tget_z_OBJECTS) $(tget_z_LDADD) $(LIBS)
tgmpop$(EXEEXT): $(tgmpop_OBJECTS) $(tgmpop_DEPENDENCIES) 
	@rm -f tgmpop$(EXEEXT)
	$(LINK) $(tgmpop_OBJECTS) $(tgmpop_LDADD) $(LIBS)
thyperbolic$(EXEEXT): $(thyperbolic_OBJECTS) $(thyperbolic_DEPENDENCIES) 
	@rm -f thyperbolic$(EXEEXT)
	$(LINK) $(thyperbolic_OBJECTS) $(thyperbolic_LDADD) $(LIBS)
thypot$(EXEEXT): $(thypot_OBJECTS) $(thypot_DEPENDENCIES) 
	@rm -f thypot$(EXEEXT)
	$(LINK) $(thypot_OBJECTS) $(thypot_LDADD) $(LIBS)
tinits$(EXEEXT): $(tinits_OBJECTS) $(tinits_DEPENDENCIES) 
	@rm -f tinits$(EXEEXT)
	$(LINK) $(tinits_OBJECTS) $(tinits_LDADD) $(LIBS)
tinp_str$(EXEEXT): $(tinp_str_OBJECTS) $(tinp_str_DEPENDENCIES) 
	@rm -f tinp_str$(EXEEXT)
	$(LINK) $(tinp_str_OBJECTS) $(tinp_str_LDADD) $(LIBS)
tinternals$(EXEEXT): $(tinternals_OBJECTS) $(tinternals_DEPENDENCIES) 
	@rm -f tinternals$(EXEEXT)
	$(LINK) $(tinternals_OBJECTS) $(tinternals_LDADD) $(LIBS)
tisnan$(EXEEXT): $(tisnan_OBJECTS) $(tisnan_DEPENDENCIES) 
	@rm -f tisnan$(EXEEXT)
	$(LINK) $(tisnan_OBJECTS) $(tisnan_LDADD) $(LIBS)
tisqrt$(EXEEXT): $(tisqrt_OBJECTS) $(tisqrt_DEPENDENCIES) 
	@rm -f tisqrt$(EXEEXT)
	$(LINK) $(tisqrt_OBJECTS) $(tisqrt_LDADD) $(LIBS)
tj0$(EXEEXT): $(tj0_OBJECTS) $(tj0_DEPENDENCIES) 
	@rm -f tj0$(EXEEXT)
	$(LINK) $(tj0_OBJECTS) $(tj0_LDADD) $(LIBS)
tj1$(EXEEXT): $(tj1_OBJECTS) $(tj1_DEPENDENCIES) 
	@rm -f tj1$(EXEEXT)
	$(LINK) $(tj1_OBJECTS) $(tj1_LDADD) $(LIBS)
tjn$(EXEEXT): $(tjn_OBJECTS) $(tjn_DEPENDENCIES) 
	@rm -f tjn$(EXEEXT)
	$(LINK) $(tjn_OBJECTS) $(tjn_LDADD) $(LIBS)
tl2b$(EXEEXT): $(tl2b_OBJECTS) $(tl2b_DEPENDENCIES) 
	@rm -f tl2b$(EXEEXT)
	$(LINK) $(tl2b_OBJECTS) $(tl2b_LDADD) $(LIBS)
tlgamma$(EXEEXT): $(tlgamma_OBJECTS) $(tlgamma_DEPENDENCIES) 
	@rm -f tlgamma$(EXEEXT)
	$(LINK) $(tlgamma_OBJECTS) $(tlgamma_LDADD) $(LIBS)
tli2$(EXEEXT): $(tli2_OBJECTS) $(tli2_DEPENDENCIES) 
	@rm -f tli2$(EXEEXT)
	$(LINK) $(tli2_OBJECTS) $(tli2_LDADD) $(LIBS)
tlngamma$(EXEEXT): $(tlngamma_OBJECTS) $(tlngamma_DEPENDENCIES) 
	@rm -f tlngamma$(EXEEXT)
	$(LINK) $(tlngamma_OBJECTS) $(tlngamma_LDADD) $(LIBS)
tlog$(EXEEXT): $(tlog_OBJECTS) $(tlog_DEPENDENCIES) 
	@rm -f tlog$(EXEEXT)
	$(LINK) $(tlog_OBJECTS) $(tlog_LDADD) $(LIBS)
tlog10$(EXEEXT): $(tlog10_OBJECTS) $(tlog10_DEPENDENCIES) 
	@rm -f tlog10$(EXEEXT)
	$(LINK) $(tlog10_OBJECTS) $(tlog10_LDADD) $(LIBS)
tlog1p$(EXEEXT): $(tlog1p_OBJECTS) $(tlog1p_DEPENDENCIES) 
	@rm -f tlog1p$(EXEEXT)
	$(LINK) $(tlog1p_OBJECTS) $(tlog1p_LDADD) $(LIBS)
tlog2$(EXEEXT): $(tlog2_OBJECTS) $(tlog2_DEPENDENCIES) 
	@rm -f tlog2$(EXEEXT)
	$(LINK) $(tlog2_OBJECTS) $(tlog2_LDADD) $(LIBS)
tmin_prec$(EXEEXT): $(tmin_prec_OBJECTS) $(tmin_prec_DEPENDENCIES) 
	@rm -f tmin_prec$(EXEEXT)
	$(LINK) $(tmin_prec_OBJECTS) $(tmin_prec_LDADD) $(LIBS)
tminmax$(EXEEXT): $(tminmax_OBJECTS) $(tminmax_DEPENDENCIES) 
	@rm -f tminmax$(EXEEXT)
	$(LINK) $(tminmax_OBJECTS) $(tminmax_LDADD) $(LIBS)
tmodf$(EXEEXT): $(tmodf_OBJECTS) $(tmodf_DEPENDENCIES) 
	@rm -f tmodf$(EXEEXT)
	$(LINK) $(tmodf_OBJECTS) $(tmodf_LDADD) $(LIBS)
tmul$(EXEEXT): $(tmul_OBJECTS) $(tmul_DEPENDENCIES) 
	@rm -f tmul$(EXEEXT)
	$(LINK) $(tmul_OBJECTS) $(tmul_LDADD) $(LIBS)
tmul_2exp$(EXEEXT): $(tmul_2exp_OBJECTS) $(tmul_2exp_DEPENDENCIES) 
	@rm -f tmul_2exp$(EXEEXT)
	$(LINK) $(tmul_2exp_OBJECTS) $(tmul_2exp_LDADD) $(LIBS)
tmul_d$(EXEEXT): $(tmul_d_OBJECTS) $(tmul_d_DEPENDENCIES) 
	@rm -f tmul_d$(EXEEXT)
	$(LINK) $(tmul_d_OBJECTS) $(tmul_d_LDADD) $(LIBS)
tmul_ui$(EXEEXT): $(tmul_ui_OBJECTS) $(tmul_ui_DEPENDENCIES) 
	@rm -f tmul_ui$(EXEEXT)
	$(LINK) $(tmul_ui_OBJECTS) $(tmul_ui_LDADD) $(LIBS)
tnext$(EXEEXT): $(tnext_OBJECTS) $(tnext_DEPENDENCIES) 
	@rm -f tnext$(EXEEXT)
	$(LINK) $(tnext_OBJECTS) $(tnext_LDADD) $(LIBS)
tout_str$(EXEEXT): $(tout_str_OBJECTS) $(tout_str_DEPENDENCIES) 
	@rm -f tout_str$(EXEEXT)
	$(LINK) $(tout_str_OBJECTS) $(tout_str_LDADD) $(LIBS)
toutimpl$(EXEEXT): $(toutimpl_OBJECTS) $(toutimpl_DEPENDENCIES) 
	@rm -f toutimpl$(EXEEXT)
	$(LINK) $(toutimpl_OBJECTS) $(toutimpl_LDADD) $(LIBS)
tpow$(EXEEXT): $(tpow_OBJECTS) $(tpow_DEPENDENCIES) 
	@rm -f tpow$(EXEEXT)
	$(LINK) $(tpow_OBJECTS) $(tpow_LDADD) $(LIBS)
tpow3$(EXEEXT): $(tpow3_OBJECTS) $(tpow3_DEPENDENCIES) 
	@rm -f tpow3$(EXEEXT)
	$(LINK) $(tpow3_OBJECTS) $(tpow3_LDADD) $(LIBS)
tpow_all$(EXEEXT): $(tpow_all_OBJECTS) $(tpow_all_DEPENDENCIES) 
	@rm -f tpow_all$(EXEEXT)
	$(LINK) $(tpow_all_OBJECTS) $(tpow_all_LDADD) $(LIBS)
tpow_z$(EXEEXT): $(tpow_z_OBJECTS) $(tpow_z_DEPENDENCIES) 
	@rm -f tpow_z$(EXEEXT)
	$(LINK) $(tpow_z_OBJECTS) $(tpow_z_LDADD) $(LIBS)
tprintf$(EXEEXT): $(tprintf_OBJECTS) $(tprintf_DEPENDENCIES) 
	@rm -f tprintf$(EXEEXT)
	$(LINK) $(tprintf_OBJECTS) $(tprintf_LDADD) $(LIBS)
trandom$(EXEEXT): $(trandom_OBJECTS) $(trandom_DEPENDENCIES) 
	@rm -f trandom$(EXEEXT)
	$(LINK) $(trandom_OBJECTS) $(trandom_LDADD) $(LIBS)
trec_sqrt$(EXEEXT): $(trec_sqrt_OBJECTS) $(trec_sqrt_DEPENDENCIES) 
	@rm -f trec_sqrt$(EXEEXT)
	$(LINK) $(trec_sqrt_OBJECTS) $(trec_sqrt_LDADD) $(LIBS)
tremquo$(EXEEXT): $(tremquo_OBJECTS) $(tremquo_DEPENDENCIES) 
	@rm -f tremquo$(EXEEXT)
	$(LINK) $(tremquo_OBJECTS) $(tremquo_LDADD) $(LIBS)
trint$(EXEEXT): $(trint_OBJECTS) $(trint_DEPENDENCIES) 
	@rm -f trint$(EXEEXT)
	$(LINK) $(trint_OBJECTS) $(trint_LDADD) $(LIBS)
troot$(EXEEXT): $(troot_OBJECTS) $(troot_DEPENDENCIES) 
	@rm -f troot$(EXEEXT)
	$(LINK) $(troot_OBJECTS) $(troot_LDADD) $(LIBS)
tround_prec$(EXEEXT): $(tround_prec_OBJECTS) $(tround_prec_DEPENDENCIES) 
	@rm -f tround_prec$(EXEEXT)
	$(LINK) $(tround_prec_OBJECTS) $(tround_prec_LDADD) $(LIBS)
tsec$(EXEEXT): $(tsec_OBJECTS) $(tsec_DEPENDENCIES) 
	@rm -f tsec$(EXEEXT)
	$(LINK) $(tsec_OBJECTS) $(tsec_LDADD) $(LIBS)
tsech$(EXEEXT): $(tsech_OBJECTS) $(tsech_DEPENDENCIES) 
	@rm -f tsech$(EXEEXT)
	$(LINK) $(tsech_OBJECTS) $(tsech_LDADD) $(LIBS)
tset$(EXEEXT): $(tset_OBJECTS) $(tset_DEPENDENCIES) 
	@rm -f tset$(EXEEXT)
	$(LINK) $(tset_OBJECTS) $(tset_LDADD) $(LIBS)
tset_d$(EXEEXT): $(tset_d_OBJECTS) $(tset_d_DEPENDENCIES) 
	@rm -f tset_d$(EXEEXT)
	$(LINK) $(tset_d_OBJECTS) $(tset_d_LDADD) $(LIBS)
tset_exp$(EXEEXT): $(tset_exp_OBJECTS) $(tset_exp_DEPENDENCIES) 
	@rm -f tset_exp$(EXEEXT)
	$(LINK) $(tset_exp_OBJECTS) $(tset_exp_LDADD) $(LIBS)
tset_f$(EXEEXT): $(tset_f_OBJECTS) $(tset_f_DEPENDENCIES) 
	@rm -f tset_f$(EXEEXT)
	$(LINK) $(tset_f_OBJECTS) $(tset_f_LDADD) $(LIBS)
tset_ld$(EXEEXT): $(tset_ld_OBJECTS) $(tset_ld_DEPENDENCIES) 
	@rm -f tset_ld$(EXEEXT)
	$(LINK) $(tset_ld_OBJECTS) $(tset_ld_LDADD) $(LIBS)
tset_q$(EXEEXT): $(tset_q_OBJECTS) $(tset_q_DEPENDENCIES) 
	@rm -f tset_q$(EXEEXT)
	$(LINK) $(tset_q_OBJECTS) $(tset_q_LDADD) $(LIBS)
tset_si$(EXEEXT): $(tset_si_OBJECTS) $(tset_si_DEPENDENCIES) 
	@rm -f tset_si$(EXEEXT)
	$(LINK) $(tset_si_OBJECTS) $(tset_si_LDADD) $(LIBS)
tset_sj$(EXEEXT): $(tset_sj_OBJECTS) $(tset_sj_DEPENDENCIES) 
	@rm -f tset_sj$(EXEEXT)
	$(LINK) $(tset_sj_OBJECTS) $(tset_sj_LDADD) $(LIBS)
tset_str$(EXEEXT): $(tset_str_OBJECTS) $(tset_str_DEPENDENCIES) 
	@rm -f tset_str$(EXEEXT)
	$(LINK) $(tset_str_OBJECTS) $(tset_str_LDADD) $(LIBS)
tset_z$(EXEEXT): $(tset_z_OBJECTS) $(tset_z_DEPENDENCIES) 
	@rm -f tset_z$(EXEEXT)
	$(LINK) $(tset_z_OBJECTS) $(tset_z_LDADD) $(LIBS)
tset_z_exp$(EXEEXT): $(tset_z_exp_OBJECTS) $(tset_z_exp_DEPENDENCIES) 
	@rm -f tset_z_exp$(EXEEXT)
	$(LINK) $(tset_z_exp_OBJECTS) $(tset_z_exp_LDADD) $(LIBS)
tsgn$(EXEEXT): $(tsgn_OBJECTS) $(tsgn_DEPENDENCIES) 
	@rm -f tsgn$(EXEEXT)
	$(LINK) $(tsgn_OBJECTS) $(tsgn_LDADD) $(LIBS)
tsi_op$(EXEEXT): $(tsi_op_OBJECTS) $(tsi_op_DEPENDENCIES) 
	@rm -f tsi_op$(EXEEXT)
	$(LINK) $(tsi_op_OBJECTS) $(tsi_op_LDADD) $(LIBS)
tsin$(EXEEXT): $(tsin_OBJECTS) $(tsin_DEPENDENCIES) 
	@rm -f tsin$(EXEEXT)
	$(LINK) $(tsin_OBJECTS) $(tsin_LDADD) $(LIBS)
tsin_cos$(EXEEXT): $(tsin_cos_OBJECTS) $(tsin_cos_DEPENDENCIES) 
	@rm -f tsin_cos$(EXEEXT)
	$(LINK) $(tsin_cos_OBJECTS) $(tsin_cos_LDADD) $(LIBS)
tsinh$(EXEEXT): $(tsinh_OBJECTS) $(tsinh_DEPENDENCIES) 
	@rm -f tsinh$(EXEEXT)
	$(LINK) $(tsinh_OBJECTS) $(tsinh_LDADD) $(LIBS)
tsinh_cosh$(EXEEXT): $(tsinh_cosh_OBJECTS) $(tsinh_cosh_DEPENDENCIES) 
	@rm -f tsinh_cosh$(EXEEXT)
	$(LINK) $(tsinh_cosh_OBJECTS) $(tsinh_cosh_LDADD) $(LIBS)
tsprintf$(EXEEXT): $(tsprintf_OBJECTS) $(tsprintf_DEPENDENCIES) 
	@rm -f tsprintf$(EXEEXT)
	$(LINK) $(tsprintf_OBJECTS) $(tsprintf_LDADD) $(LIBS)
tsqr$(EXEEXT): $(tsqr_OBJECTS) $(tsqr_DEPENDENCIES) 
	@rm -f tsqr$(EXEEXT)
	$(LINK) $(tsqr_OBJECTS) $(tsqr_LDADD) $(LIBS)
tsqrt$(EXEEXT): $(tsqrt_OBJECTS) $(tsqrt_DEPENDENCIES) 
	@rm -f tsqrt$(EXEEXT)
	$(LINK) $(tsqrt_OBJECTS) $(tsqrt_LDADD) $(LIBS)
tsqrt_ui$(EXEEXT): $(tsqrt_ui_OBJECTS) $(tsqrt_ui_DEPENDENCIES) 
	@rm -f tsqrt_ui$(EXEEXT)
	$(LINK) $(tsqrt_ui_OBJECTS) $(tsqrt_ui_LDADD) $(LIBS)
tstckintc$(EXEEXT): $(tstckintc_OBJECTS) $(tstckintc_DEPENDENCIES) 
	@rm -f tstckintc$(EXEEXT)
	$(LINK) $(tstckintc_OBJECTS) $(tstckintc_LDADD) $(LIBS)
tstrtofr$(EXEEXT): $(tstrtofr_OBJECTS) $(tstrtofr_DEPENDENCIES) 
	@rm -f tstrtofr$(EXEEXT)
	$(LINK) $(tstrtofr_OBJECTS) $(tstrtofr_LDADD) $(LIBS)
tsub$(EXEEXT): $(tsub_OBJECTS) $(tsub_DEPENDENCIES) 
	@rm -f tsub$(EXEEXT)
	$(LINK) $(tsub_OBJECTS) $(tsub_LDADD) $(LIBS)
tsub1sp$(EXEEXT): $(tsub1sp_OBJECTS) $(tsub1sp_DEPENDENCIES) 
	@rm -f tsub1sp$(EXEEXT)
	$(LINK) $(tsub1sp_OBJECTS) $(tsub1sp_LDADD) $(LIBS)
tsub_d$(EXEEXT): $(tsub_d_OBJECTS) $(tsub_d_DEPENDENCIES) 
	@rm -f tsub_d$(EXEEXT)
	$(LINK) $(tsub_d_OBJECTS) $(tsub_d_LDADD) $(LIBS)
tsub_ui$(EXEEXT): $(tsub_ui_OBJECTS) $(tsub_ui_DEPENDENCIES) 
	@rm -f tsub_ui$(EXEEXT)
	$(LINK) $(tsub_ui_OBJECTS) $(tsub_ui_LDADD) $(LIBS)
tsubnormal$(EXEEXT): $(tsubnormal_OBJECTS) $(tsubnormal_DEPENDENCIES) 
	@rm -f tsubnormal$(EXEEXT)
	$(LINK) $(tsubnormal_OBJECTS) $(tsubnormal_LDADD) $(LIBS)
tsum$(EXEEXT): $(tsum_OBJECTS) $(tsum_DEPENDENCIES) 
	@rm -f tsum$(EXEEXT)
	$(LINK) $(tsum_OBJECTS) $(tsum_LDADD) $(LIBS)
tswap$(EXEEXT): $(tswap_OBJECTS) $(tswap_DEPENDENCIES) 
	@rm -f tswap$(EXEEXT)
	$(LINK) $(tswap_OBJECTS) $(tswap_LDADD) $(LIBS)
ttan$(EXEEXT): $(ttan_OBJECTS) $(ttan_DEPENDENCIES) 
	@rm -f ttan$(EXEEXT)
	$(LINK) $(ttan_OBJECTS) $(ttan_LDADD) $(LIBS)
ttanh$(EXEEXT): $(ttanh_OBJECTS) $(ttanh_DEPENDENCIES) 
	@rm -f ttanh$(EXEEXT)
	$(LINK) $(ttanh_OBJECTS) $(ttanh_LDADD) $(LIBS)
ttrunc$(EXEEXT): $(ttrunc_OBJECTS) $(ttrunc_DEPENDENCIES) 
	@rm -f ttrunc$(EXEEXT)
	$(LINK) $(ttrunc_OBJECTS) $(ttrunc_LDADD) $(LIBS)
tui_div$(EXEEXT): $(tui_div_OBJECTS) $(tui_div_DEPENDENCIES) 
	@rm -f tui_div$(EXEEXT)
	$(LINK) $(tui_div_OBJECTS) $(tui_div_LDADD) $(LIBS)
tui_pow$(EXEEXT): $(tui_pow_OBJECTS) $(tui_pow_DEPENDENCIES) 
	@rm -f tui_pow$(EXEEXT)
	$(LINK) $(tui_pow_OBJECTS) $(tui_pow_LDADD) $(LIBS)
tui_sub$(EXEEXT): $(tui_sub_OBJECTS) $(tui_sub_DEPENDENCIES) 
	@rm -f tui_sub$(EXEEXT)
	$(LINK) $(tui_sub_OBJECTS) $(tui_sub_LDADD) $(LIBS)
turandom$(EXEEXT): $(turandom_OBJECTS) $(turandom_DEPENDENCIES) 
	@rm -f turandom$(EXEEXT)
	$(LINK) $(turandom_OBJECTS) $(turandom_LDADD) $(LIBS)
tversion$(EXEEXT): $(tversion_OBJECTS) $(tversion_DEPENDENCIES) 
	@rm -f tversion$(EXEEXT)
	$(LINK) $(tversion_OBJECTS) $(tversion_LDADD) $(LIBS)
ty0$(EXEEXT): $(ty0_OBJECTS) $(ty0_DEPENDENCIES) 
	@rm -f ty0$(EXEEXT)
	$(LINK) $(ty0_OBJECTS) $(ty0_LDADD) $(LIBS)
ty1$(EXEEXT): $(ty1_OBJECTS) $(ty1_DEPENDENCIES) 
	@rm -f ty1$(EXEEXT)
	$(LINK) $(ty1_OBJECTS) $(ty1_LDADD) $(LIBS)
tyn$(EXEEXT): $(tyn_OBJECTS) $(tyn_DEPENDENCIES) 
	@rm -f tyn$(EXEEXT)
	$(LINK) $(tyn_OBJECTS) $(tyn_LDADD) $(LIBS)
tzeta$(EXEEXT): $(tzeta_OBJECTS) $(tzeta_DEPENDENCIES) 
	@rm -f tzeta$(EXEEXT)
	$(LINK) $(tzeta_OBJECTS) $(tzeta_LDADD) $(LIBS)
tzeta_ui$(EXEEXT): $(tzeta_ui_OBJECTS) $(tzeta_ui_DEPENDENCIES) 
	@rm -f tzeta_ui$(EXEEXT)
	$(LINK) $(tzeta_ui_OBJECTS) $(tzeta_ui_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c
$(top_builddir)/ansi2knr:
	$(am__cd) $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) ./ansi2knr

mostlyclean-kr:
	-test "$U" = "" || rm -f *_.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cmp_str$U.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/memory$U.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpf_compat$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpfr_compat$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/random2$U.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/reuse$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rnd_mode$U.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tabs$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tacos$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tacosh$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tadd$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tadd1sp$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tadd_d$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tadd_ui$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tagm$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tai$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tasin$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tasinh$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tatan$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tatanh$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/taway$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tbuildopt$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcan_round$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcbrt$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcheck$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcmp$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcmp2$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcmp_d$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcmp_ld$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcmp_ui$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcmpabs$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcomparisons$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tconst_catalan$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tconst_euler$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tconst_log2$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tconst_pi$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcopysign$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcos$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcosh$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcot$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcoth$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcsc$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcsch$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/td_div$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/td_sub$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tdigamma$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tdim$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tdiv$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tdiv_d$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tdiv_ui$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/teint$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/teq$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/terf$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tests$U.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/texceptions$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/texp$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/texp10$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/texp2$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/texpm1$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tfactorial$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tfits$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tfma$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tfmod$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tfms$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tfprintf$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tfrac$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tgamma$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tget_d$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tget_d_2exp$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tget_f$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tget_flt$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tget_ld_2exp$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tget_set_d64$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tget_sj$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tget_str$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tget_z$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tgmpop$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/thyperbolic$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/thypot$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tinits$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tinp_str$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tinternals$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tisnan$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tisqrt$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tj0$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tj1$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tjn$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tl2b$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tlgamma$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tli2$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tlngamma$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tlog$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tlog10$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tlog1p$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tlog2$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tmin_prec$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tminmax$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tmodf$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tmul$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tmul_2exp$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tmul_d$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tmul_ui$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tnext$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tout_str$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/toutimpl$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tpow$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tpow3$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tpow_all$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tpow_z$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tprintf$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/trandom$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/trec_sqrt$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tremquo$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/trint$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/troot$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tround_prec$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsec$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsech$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tset$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tset_d$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tset_exp$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tset_f$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tset_ld$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tset_q$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tset_si$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tset_sj$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tset_str$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tset_z$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tset_z_exp$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsgn$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsi_op$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsin$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsin_cos$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsinh$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsinh_cosh$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsprintf$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsqr$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsqrt$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsqrt_ui$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tstckintc$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tstrtofr$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsub$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsub1sp$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsub_d$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsub_ui$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsubnormal$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsum$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tswap$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ttan$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ttanh$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ttrunc$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tui_div$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tui_pow$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tui_sub$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/turandom$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tversion$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ty0$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ty1$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tyn$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tzeta$U.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tzeta_ui$U.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LTCOMPILE) -c -o $@ $<
cmp_str_.c: cmp_str.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/cmp_str.c; then echo $(srcdir)/cmp_str.c; else echo cmp_str.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
memory_.c: memory.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/memory.c; then echo $(srcdir)/memory.c; else echo memory.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
mpf_compat_.c: mpf_compat.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/mpf_compat.c; then echo $(srcdir)/mpf_compat.c; else echo mpf_compat.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
mpfr_compat_.c: mpfr_compat.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/mpfr_compat.c; then echo $(srcdir)/mpfr_compat.c; else echo mpfr_compat.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
random2_.c: random2.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/random2.c; then echo $(srcdir)/random2.c; else echo random2.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
reuse_.c: reuse.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/reuse.c; then echo $(srcdir)/reuse.c; else echo reuse.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
rnd_mode_.c: rnd_mode.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/rnd_mode.c; then echo $(srcdir)/rnd_mode.c; else echo rnd_mode.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tabs_.c: tabs.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tabs.c; then echo $(srcdir)/tabs.c; else echo tabs.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tacos_.c: tacos.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tacos.c; then echo $(srcdir)/tacos.c; else echo tacos.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tacosh_.c: tacosh.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tacosh.c; then echo $(srcdir)/tacosh.c; else echo tacosh.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tadd_.c: tadd.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tadd.c; then echo $(srcdir)/tadd.c; else echo tadd.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tadd1sp_.c: tadd1sp.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tadd1sp.c; then echo $(srcdir)/tadd1sp.c; else echo tadd1sp.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tadd_d_.c: tadd_d.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tadd_d.c; then echo $(srcdir)/tadd_d.c; else echo tadd_d.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tadd_ui_.c: tadd_ui.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tadd_ui.c; then echo $(srcdir)/tadd_ui.c; else echo tadd_ui.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tagm_.c: tagm.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tagm.c; then echo $(srcdir)/tagm.c; else echo tagm.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tai_.c: tai.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tai.c; then echo $(srcdir)/tai.c; else echo tai.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tasin_.c: tasin.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tasin.c; then echo $(srcdir)/tasin.c; else echo tasin.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tasinh_.c: tasinh.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tasinh.c; then echo $(srcdir)/tasinh.c; else echo tasinh.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tatan_.c: tatan.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tatan.c; then echo $(srcdir)/tatan.c; else echo tatan.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tatanh_.c: tatanh.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tatanh.c; then echo $(srcdir)/tatanh.c; else echo tatanh.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
taway_.c: taway.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/taway.c; then echo $(srcdir)/taway.c; else echo taway.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tbuildopt_.c: tbuildopt.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tbuildopt.c; then echo $(srcdir)/tbuildopt.c; else echo tbuildopt.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tcan_round_.c: tcan_round.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tcan_round.c; then echo $(srcdir)/tcan_round.c; else echo tcan_round.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tcbrt_.c: tcbrt.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tcbrt.c; then echo $(srcdir)/tcbrt.c; else echo tcbrt.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tcheck_.c: tcheck.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tcheck.c; then echo $(srcdir)/tcheck.c; else echo tcheck.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tcmp_.c: tcmp.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tcmp.c; then echo $(srcdir)/tcmp.c; else echo tcmp.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tcmp2_.c: tcmp2.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tcmp2.c; then echo $(srcdir)/tcmp2.c; else echo tcmp2.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tcmp_d_.c: tcmp_d.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tcmp_d.c; then echo $(srcdir)/tcmp_d.c; else echo tcmp_d.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tcmp_ld_.c: tcmp_ld.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tcmp_ld.c; then echo $(srcdir)/tcmp_ld.c; else echo tcmp_ld.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tcmp_ui_.c: tcmp_ui.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tcmp_ui.c; then echo $(srcdir)/tcmp_ui.c; else echo tcmp_ui.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tcmpabs_.c: tcmpabs.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tcmpabs.c; then echo $(srcdir)/tcmpabs.c; else echo tcmpabs.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tcomparisons_.c: tcomparisons.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tcomparisons.c; then echo $(srcdir)/tcomparisons.c; else echo tcomparisons.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tconst_catalan_.c: tconst_catalan.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tconst_catalan.c; then echo $(srcdir)/tconst_catalan.c; else echo tconst_catalan.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tconst_euler_.c: tconst_euler.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tconst_euler.c; then echo $(srcdir)/tconst_euler.c; else echo tconst_euler.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tconst_log2_.c: tconst_log2.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tconst_log2.c; then echo $(srcdir)/tconst_log2.c; else echo tconst_log2.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tconst_pi_.c: tconst_pi.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tconst_pi.c; then echo $(srcdir)/tconst_pi.c; else echo tconst_pi.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tcopysign_.c: tcopysign.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tcopysign.c; then echo $(srcdir)/tcopysign.c; else echo tcopysign.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tcos_.c: tcos.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tcos.c; then echo $(srcdir)/tcos.c; else echo tcos.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tcosh_.c: tcosh.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tcosh.c; then echo $(srcdir)/tcosh.c; else echo tcosh.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tcot_.c: tcot.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tcot.c; then echo $(srcdir)/tcot.c; else echo tcot.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tcoth_.c: tcoth.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tcoth.c; then echo $(srcdir)/tcoth.c; else echo tcoth.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tcsc_.c: tcsc.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tcsc.c; then echo $(srcdir)/tcsc.c; else echo tcsc.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tcsch_.c: tcsch.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tcsch.c; then echo $(srcdir)/tcsch.c; else echo tcsch.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
td_div_.c: td_div.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/td_div.c; then echo $(srcdir)/td_div.c; else echo td_div.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
td_sub_.c: td_sub.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/td_sub.c; then echo $(srcdir)/td_sub.c; else echo td_sub.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tdigamma_.c: tdigamma.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tdigamma.c; then echo $(srcdir)/tdigamma.c; else echo tdigamma.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tdim_.c: tdim.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tdim.c; then echo $(srcdir)/tdim.c; else echo tdim.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tdiv_.c: tdiv.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tdiv.c; then echo $(srcdir)/tdiv.c; else echo tdiv.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tdiv_d_.c: tdiv_d.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tdiv_d.c; then echo $(srcdir)/tdiv_d.c; else echo tdiv_d.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tdiv_ui_.c: tdiv_ui.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tdiv_ui.c; then echo $(srcdir)/tdiv_ui.c; else echo tdiv_ui.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
teint_.c: teint.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/teint.c; then echo $(srcdir)/teint.c; else echo teint.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
teq_.c: teq.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/teq.c; then echo $(srcdir)/teq.c; else echo teq.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
terf_.c: terf.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/terf.c; then echo $(srcdir)/terf.c; else echo terf.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tests_.c: tests.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tests.c; then echo $(srcdir)/tests.c; else echo tests.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
texceptions_.c: texceptions.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/texceptions.c; then echo $(srcdir)/texceptions.c; else echo texceptions.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
texp_.c: texp.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/texp.c; then echo $(srcdir)/texp.c; else echo texp.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
texp10_.c: texp10.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/texp10.c; then echo $(srcdir)/texp10.c; else echo texp10.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
texp2_.c: texp2.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/texp2.c; then echo $(srcdir)/texp2.c; else echo texp2.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
texpm1_.c: texpm1.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/texpm1.c; then echo $(srcdir)/texpm1.c; else echo texpm1.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tfactorial_.c: tfactorial.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tfactorial.c; then echo $(srcdir)/tfactorial.c; else echo tfactorial.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tfits_.c: tfits.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tfits.c; then echo $(srcdir)/tfits.c; else echo tfits.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tfma_.c: tfma.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tfma.c; then echo $(srcdir)/tfma.c; else echo tfma.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tfmod_.c: tfmod.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tfmod.c; then echo $(srcdir)/tfmod.c; else echo tfmod.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tfms_.c: tfms.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tfms.c; then echo $(srcdir)/tfms.c; else echo tfms.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tfprintf_.c: tfprintf.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tfprintf.c; then echo $(srcdir)/tfprintf.c; else echo tfprintf.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tfrac_.c: tfrac.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tfrac.c; then echo $(srcdir)/tfrac.c; else echo tfrac.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tgamma_.c: tgamma.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tgamma.c; then echo $(srcdir)/tgamma.c; else echo tgamma.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tget_d_.c: tget_d.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tget_d.c; then echo $(srcdir)/tget_d.c; else echo tget_d.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tget_d_2exp_.c: tget_d_2exp.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tget_d_2exp.c; then echo $(srcdir)/tget_d_2exp.c; else echo tget_d_2exp.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tget_f_.c: tget_f.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tget_f.c; then echo $(srcdir)/tget_f.c; else echo tget_f.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tget_flt_.c: tget_flt.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tget_flt.c; then echo $(srcdir)/tget_flt.c; else echo tget_flt.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tget_ld_2exp_.c: tget_ld_2exp.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tget_ld_2exp.c; then echo $(srcdir)/tget_ld_2exp.c; else echo tget_ld_2exp.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tget_set_d64_.c: tget_set_d64.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tget_set_d64.c; then echo $(srcdir)/tget_set_d64.c; else echo tget_set_d64.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tget_sj_.c: tget_sj.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tget_sj.c; then echo $(srcdir)/tget_sj.c; else echo tget_sj.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tget_str_.c: tget_str.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tget_str.c; then echo $(srcdir)/tget_str.c; else echo tget_str.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tget_z_.c: tget_z.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tget_z.c; then echo $(srcdir)/tget_z.c; else echo tget_z.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tgmpop_.c: tgmpop.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tgmpop.c; then echo $(srcdir)/tgmpop.c; else echo tgmpop.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
thyperbolic_.c: thyperbolic.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/thyperbolic.c; then echo $(srcdir)/thyperbolic.c; else echo thyperbolic.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
thypot_.c: thypot.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/thypot.c; then echo $(srcdir)/thypot.c; else echo thypot.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tinits_.c: tinits.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tinits.c; then echo $(srcdir)/tinits.c; else echo tinits.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tinp_str_.c: tinp_str.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tinp_str.c; then echo $(srcdir)/tinp_str.c; else echo tinp_str.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tinternals_.c: tinternals.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tinternals.c; then echo $(srcdir)/tinternals.c; else echo tinternals.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tisnan_.c: tisnan.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tisnan.c; then echo $(srcdir)/tisnan.c; else echo tisnan.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tisqrt_.c: tisqrt.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tisqrt.c; then echo $(srcdir)/tisqrt.c; else echo tisqrt.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tj0_.c: tj0.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tj0.c; then echo $(srcdir)/tj0.c; else echo tj0.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tj1_.c: tj1.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tj1.c; then echo $(srcdir)/tj1.c; else echo tj1.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tjn_.c: tjn.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tjn.c; then echo $(srcdir)/tjn.c; else echo tjn.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tl2b_.c: tl2b.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tl2b.c; then echo $(srcdir)/tl2b.c; else echo tl2b.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tlgamma_.c: tlgamma.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tlgamma.c; then echo $(srcdir)/tlgamma.c; else echo tlgamma.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tli2_.c: tli2.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tli2.c; then echo $(srcdir)/tli2.c; else echo tli2.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tlngamma_.c: tlngamma.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tlngamma.c; then echo $(srcdir)/tlngamma.c; else echo tlngamma.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tlog_.c: tlog.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tlog.c; then echo $(srcdir)/tlog.c; else echo tlog.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tlog10_.c: tlog10.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tlog10.c; then echo $(srcdir)/tlog10.c; else echo tlog10.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tlog1p_.c: tlog1p.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tlog1p.c; then echo $(srcdir)/tlog1p.c; else echo tlog1p.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tlog2_.c: tlog2.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tlog2.c; then echo $(srcdir)/tlog2.c; else echo tlog2.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tmin_prec_.c: tmin_prec.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tmin_prec.c; then echo $(srcdir)/tmin_prec.c; else echo tmin_prec.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tminmax_.c: tminmax.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tminmax.c; then echo $(srcdir)/tminmax.c; else echo tminmax.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tmodf_.c: tmodf.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tmodf.c; then echo $(srcdir)/tmodf.c; else echo tmodf.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tmul_.c: tmul.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tmul.c; then echo $(srcdir)/tmul.c; else echo tmul.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tmul_2exp_.c: tmul_2exp.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tmul_2exp.c; then echo $(srcdir)/tmul_2exp.c; else echo tmul_2exp.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tmul_d_.c: tmul_d.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tmul_d.c; then echo $(srcdir)/tmul_d.c; else echo tmul_d.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tmul_ui_.c: tmul_ui.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tmul_ui.c; then echo $(srcdir)/tmul_ui.c; else echo tmul_ui.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tnext_.c: tnext.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tnext.c; then echo $(srcdir)/tnext.c; else echo tnext.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tout_str_.c: tout_str.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tout_str.c; then echo $(srcdir)/tout_str.c; else echo tout_str.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
toutimpl_.c: toutimpl.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/toutimpl.c; then echo $(srcdir)/toutimpl.c; else echo toutimpl.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tpow_.c: tpow.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tpow.c; then echo $(srcdir)/tpow.c; else echo tpow.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tpow3_.c: tpow3.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tpow3.c; then echo $(srcdir)/tpow3.c; else echo tpow3.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tpow_all_.c: tpow_all.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tpow_all.c; then echo $(srcdir)/tpow_all.c; else echo tpow_all.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tpow_z_.c: tpow_z.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tpow_z.c; then echo $(srcdir)/tpow_z.c; else echo tpow_z.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tprintf_.c: tprintf.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tprintf.c; then echo $(srcdir)/tprintf.c; else echo tprintf.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
trandom_.c: trandom.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/trandom.c; then echo $(srcdir)/trandom.c; else echo trandom.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
trec_sqrt_.c: trec_sqrt.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/trec_sqrt.c; then echo $(srcdir)/trec_sqrt.c; else echo trec_sqrt.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tremquo_.c: tremquo.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tremquo.c; then echo $(srcdir)/tremquo.c; else echo tremquo.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
trint_.c: trint.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/trint.c; then echo $(srcdir)/trint.c; else echo trint.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
troot_.c: troot.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/troot.c; then echo $(srcdir)/troot.c; else echo troot.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tround_prec_.c: tround_prec.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tround_prec.c; then echo $(srcdir)/tround_prec.c; else echo tround_prec.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tsec_.c: tsec.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tsec.c; then echo $(srcdir)/tsec.c; else echo tsec.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tsech_.c: tsech.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tsech.c; then echo $(srcdir)/tsech.c; else echo tsech.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tset_.c: tset.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tset.c; then echo $(srcdir)/tset.c; else echo tset.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tset_d_.c: tset_d.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tset_d.c; then echo $(srcdir)/tset_d.c; else echo tset_d.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tset_exp_.c: tset_exp.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tset_exp.c; then echo $(srcdir)/tset_exp.c; else echo tset_exp.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tset_f_.c: tset_f.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tset_f.c; then echo $(srcdir)/tset_f.c; else echo tset_f.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tset_ld_.c: tset_ld.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tset_ld.c; then echo $(srcdir)/tset_ld.c; else echo tset_ld.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tset_q_.c: tset_q.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tset_q.c; then echo $(srcdir)/tset_q.c; else echo tset_q.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tset_si_.c: tset_si.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tset_si.c; then echo $(srcdir)/tset_si.c; else echo tset_si.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tset_sj_.c: tset_sj.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tset_sj.c; then echo $(srcdir)/tset_sj.c; else echo tset_sj.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tset_str_.c: tset_str.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tset_str.c; then echo $(srcdir)/tset_str.c; else echo tset_str.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tset_z_.c: tset_z.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tset_z.c; then echo $(srcdir)/tset_z.c; else echo tset_z.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tset_z_exp_.c: tset_z_exp.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tset_z_exp.c; then echo $(srcdir)/tset_z_exp.c; else echo tset_z_exp.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tsgn_.c: tsgn.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tsgn.c; then echo $(srcdir)/tsgn.c; else echo tsgn.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tsi_op_.c: tsi_op.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tsi_op.c; then echo $(srcdir)/tsi_op.c; else echo tsi_op.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tsin_.c: tsin.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tsin.c; then echo $(srcdir)/tsin.c; else echo tsin.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tsin_cos_.c: tsin_cos.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tsin_cos.c; then echo $(srcdir)/tsin_cos.c; else echo tsin_cos.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tsinh_.c: tsinh.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tsinh.c; then echo $(srcdir)/tsinh.c; else echo tsinh.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tsinh_cosh_.c: tsinh_cosh.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tsinh_cosh.c; then echo $(srcdir)/tsinh_cosh.c; else echo tsinh_cosh.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tsprintf_.c: tsprintf.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tsprintf.c; then echo $(srcdir)/tsprintf.c; else echo tsprintf.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tsqr_.c: tsqr.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tsqr.c; then echo $(srcdir)/tsqr.c; else echo tsqr.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tsqrt_.c: tsqrt.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tsqrt.c; then echo $(srcdir)/tsqrt.c; else echo tsqrt.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tsqrt_ui_.c: tsqrt_ui.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tsqrt_ui.c; then echo $(srcdir)/tsqrt_ui.c; else echo tsqrt_ui.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tstckintc_.c: tstckintc.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tstckintc.c; then echo $(srcdir)/tstckintc.c; else echo tstckintc.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tstrtofr_.c: tstrtofr.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tstrtofr.c; then echo $(srcdir)/tstrtofr.c; else echo tstrtofr.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tsub_.c: tsub.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tsub.c; then echo $(srcdir)/tsub.c; else echo tsub.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tsub1sp_.c: tsub1sp.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tsub1sp.c; then echo $(srcdir)/tsub1sp.c; else echo tsub1sp.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tsub_d_.c: tsub_d.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tsub_d.c; then echo $(srcdir)/tsub_d.c; else echo tsub_d.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tsub_ui_.c: tsub_ui.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tsub_ui.c; then echo $(srcdir)/tsub_ui.c; else echo tsub_ui.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tsubnormal_.c: tsubnormal.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tsubnormal.c; then echo $(srcdir)/tsubnormal.c; else echo tsubnormal.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tsum_.c: tsum.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tsum.c; then echo $(srcdir)/tsum.c; else echo tsum.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tswap_.c: tswap.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tswap.c; then echo $(srcdir)/tswap.c; else echo tswap.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
ttan_.c: ttan.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/ttan.c; then echo $(srcdir)/ttan.c; else echo ttan.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
ttanh_.c: ttanh.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/ttanh.c; then echo $(srcdir)/ttanh.c; else echo ttanh.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
ttrunc_.c: ttrunc.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/ttrunc.c; then echo $(srcdir)/ttrunc.c; else echo ttrunc.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tui_div_.c: tui_div.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tui_div.c; then echo $(srcdir)/tui_div.c; else echo tui_div.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tui_pow_.c: tui_pow.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tui_pow.c; then echo $(srcdir)/tui_pow.c; else echo tui_pow.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tui_sub_.c: tui_sub.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tui_sub.c; then echo $(srcdir)/tui_sub.c; else echo tui_sub.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
turandom_.c: turandom.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/turandom.c; then echo $(srcdir)/turandom.c; else echo turandom.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tversion_.c: tversion.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tversion.c; then echo $(srcdir)/tversion.c; else echo tversion.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
ty0_.c: ty0.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/ty0.c; then echo $(srcdir)/ty0.c; else echo ty0.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
ty1_.c: ty1.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/ty1.c; then echo $(srcdir)/ty1.c; else echo ty1.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tyn_.c: tyn.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tyn.c; then echo $(srcdir)/tyn.c; else echo tyn.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tzeta_.c: tzeta.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tzeta.c; then echo $(srcdir)/tzeta.c; else echo tzeta.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
tzeta_ui_.c: tzeta_ui.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tzeta_ui.c; then echo $(srcdir)/tzeta_ui.c; else echo tzeta_ui.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > $@ || rm -f $@
cmp_str_.$(OBJEXT) cmp_str_.lo memory_.$(OBJEXT) memory_.lo \
mpf_compat_.$(OBJEXT) mpf_compat_.lo mpfr_compat_.$(OBJEXT) \
mpfr_compat_.lo random2_.$(OBJEXT) random2_.lo reuse_.$(OBJEXT) \
reuse_.lo rnd_mode_.$(OBJEXT) rnd_mode_.lo tabs_.$(OBJEXT) tabs_.lo \
tacos_.$(OBJEXT) tacos_.lo tacosh_.$(OBJEXT) tacosh_.lo \
tadd_.$(OBJEXT) tadd_.lo tadd1sp_.$(OBJEXT) tadd1sp_.lo \
tadd_d_.$(OBJEXT) tadd_d_.lo tadd_ui_.$(OBJEXT) tadd_ui_.lo \
tagm_.$(OBJEXT) tagm_.lo tai_.$(OBJEXT) tai_.lo tasin_.$(OBJEXT) \
tasin_.lo tasinh_.$(OBJEXT) tasinh_.lo tatan_.$(OBJEXT) tatan_.lo \
tatanh_.$(OBJEXT) tatanh_.lo taway_.$(OBJEXT) taway_.lo \
tbuildopt_.$(OBJEXT) tbuildopt_.lo tcan_round_.$(OBJEXT) \
tcan_round_.lo tcbrt_.$(OBJEXT) tcbrt_.lo tcheck_.$(OBJEXT) tcheck_.lo \
tcmp_.$(OBJEXT) tcmp_.lo tcmp2_.$(OBJEXT) tcmp2_.lo tcmp_d_.$(OBJEXT) \
tcmp_d_.lo tcmp_ld_.$(OBJEXT) tcmp_ld_.lo tcmp_ui_.$(OBJEXT) \
tcmp_ui_.lo tcmpabs_.$(OBJEXT) tcmpabs_.lo tcomparisons_.$(OBJEXT) \
tcomparisons_.lo tconst_catalan_.$(OBJEXT) tconst_catalan_.lo \
tconst_euler_.$(OBJEXT) tconst_euler_.lo tconst_log2_.$(OBJEXT) \
tconst_log2_.lo tconst_pi_.$(OBJEXT) tconst_pi_.lo \
tcopysign_.$(OBJEXT) tcopysign_.lo tcos_.$(OBJEXT) tcos_.lo \
tcosh_.$(OBJEXT) tcosh_.lo tcot_.$(OBJEXT) tcot_.lo tcoth_.$(OBJEXT) \
tcoth_.lo tcsc_.$(OBJEXT) tcsc_.lo tcsch_.$(OBJEXT) tcsch_.lo \
td_div_.$(OBJEXT) td_div_.lo td_sub_.$(OBJEXT) td_sub_.lo \
tdigamma_.$(OBJEXT) tdigamma_.lo tdim_.$(OBJEXT) tdim_.lo \
tdiv_.$(OBJEXT) tdiv_.lo tdiv_d_.$(OBJEXT) tdiv_d_.lo \
tdiv_ui_.$(OBJEXT) tdiv_ui_.lo teint_.$(OBJEXT) teint_.lo \
teq_.$(OBJEXT) teq_.lo terf_.$(OBJEXT) terf_.lo tests_.$(OBJEXT) \
tests_.lo texceptions_.$(OBJEXT) texceptions_.lo texp_.$(OBJEXT) \
texp_.lo texp10_.$(OBJEXT) texp10_.lo texp2_.$(OBJEXT) texp2_.lo \
texpm1_.$(OBJEXT) texpm1_.lo tfactorial_.$(OBJEXT) tfactorial_.lo \
tfits_.$(OBJEXT) tfits_.lo tfma_.$(OBJEXT) tfma_.lo tfmod_.$(OBJEXT) \
tfmod_.lo tfms_.$(OBJEXT) tfms_.lo tfprintf_.$(OBJEXT) tfprintf_.lo \
tfrac_.$(OBJEXT) tfrac_.lo tgamma_.$(OBJEXT) tgamma_.lo \
tget_d_.$(OBJEXT) tget_d_.lo tget_d_2exp_.$(OBJEXT) tget_d_2exp_.lo \
tget_f_.$(OBJEXT) tget_f_.lo tget_flt_.$(OBJEXT) tget_flt_.lo \
tget_ld_2exp_.$(OBJEXT) tget_ld_2exp_.lo tget_set_d64_.$(OBJEXT) \
tget_set_d64_.lo tget_sj_.$(OBJEXT) tget_sj_.lo tget_str_.$(OBJEXT) \
tget_str_.lo tget_z_.$(OBJEXT) tget_z_.lo tgmpop_.$(OBJEXT) tgmpop_.lo \
thyperbolic_.$(OBJEXT) thyperbolic_.lo thypot_.$(OBJEXT) thypot_.lo \
tinits_.$(OBJEXT) tinits_.lo tinp_str_.$(OBJEXT) tinp_str_.lo \
tinternals_.$(OBJEXT) tinternals_.lo tisnan_.$(OBJEXT) tisnan_.lo \
tisqrt_.$(OBJEXT) tisqrt_.lo tj0_.$(OBJEXT) tj0_.lo tj1_.$(OBJEXT) \
tj1_.lo tjn_.$(OBJEXT) tjn_.lo tl2b_.$(OBJEXT) tl2b_.lo \
tlgamma_.$(OBJEXT) tlgamma_.lo tli2_.$(OBJEXT) tli2_.lo \
tlngamma_.$(OBJEXT) tlngamma_.lo tlog_.$(OBJEXT) tlog_.lo \
tlog10_.$(OBJEXT) tlog10_.lo tlog1p_.$(OBJEXT) tlog1p_.lo \
tlog2_.$(OBJEXT) tlog2_.lo tmin_prec_.$(OBJEXT) tmin_prec_.lo \
tminmax_.$(OBJEXT) tminmax_.lo tmodf_.$(OBJEXT) tmodf_.lo \
tmul_.$(OBJEXT) tmul_.lo tmul_2exp_.$(OBJEXT) tmul_2exp_.lo \
tmul_d_.$(OBJEXT) tmul_d_.lo tmul_ui_.$(OBJEXT) tmul_ui_.lo \
tnext_.$(OBJEXT) tnext_.lo tout_str_.$(OBJEXT) tout_str_.lo \
toutimpl_.$(OBJEXT) toutimpl_.lo tpow_.$(OBJEXT) tpow_.lo \
tpow3_.$(OBJEXT) tpow3_.lo tpow_all_.$(OBJEXT) tpow_all_.lo \
tpow_z_.$(OBJEXT) tpow_z_.lo tprintf_.$(OBJEXT) tprintf_.lo \
trandom_.$(OBJEXT) trandom_.lo trec_sqrt_.$(OBJEXT) trec_sqrt_.lo \
tremquo_.$(OBJEXT) tremquo_.lo trint_.$(OBJEXT) trint_.lo \
troot_.$(OBJEXT) troot_.lo tround_prec_.$(OBJEXT) tround_prec_.lo \
tsec_.$(OBJEXT) tsec_.lo tsech_.$(OBJEXT) tsech_.lo tset_.$(OBJEXT) \
tset_.lo tset_d_.$(OBJEXT) tset_d_.lo tset_exp_.$(OBJEXT) tset_exp_.lo \
tset_f_.$(OBJEXT) tset_f_.lo tset_ld_.$(OBJEXT) tset_ld_.lo \
tset_q_.$(OBJEXT) tset_q_.lo tset_si_.$(OBJEXT) tset_si_.lo \
tset_sj_.$(OBJEXT) tset_sj_.lo tset_str_.$(OBJEXT) tset_str_.lo \
tset_z_.$(OBJEXT) tset_z_.lo tset_z_exp_.$(OBJEXT) tset_z_exp_.lo \
tsgn_.$(OBJEXT) tsgn_.lo tsi_op_.$(OBJEXT) tsi_op_.lo tsin_.$(OBJEXT) \
tsin_.lo tsin_cos_.$(OBJEXT) tsin_cos_.lo tsinh_.$(OBJEXT) tsinh_.lo \
tsinh_cosh_.$(OBJEXT) tsinh_cosh_.lo tsprintf_.$(OBJEXT) tsprintf_.lo \
tsqr_.$(OBJEXT) tsqr_.lo tsqrt_.$(OBJEXT) tsqrt_.lo \
tsqrt_ui_.$(OBJEXT) tsqrt_ui_.lo tstckintc_.$(OBJEXT) tstckintc_.lo \
tstrtofr_.$(OBJEXT) tstrtofr_.lo tsub_.$(OBJEXT) tsub_.lo \
tsub1sp_.$(OBJEXT) tsub1sp_.lo tsub_d_.$(OBJEXT) tsub_d_.lo \
tsub_ui_.$(OBJEXT) tsub_ui_.lo tsubnormal_.$(OBJEXT) tsubnormal_.lo \
tsum_.$(OBJEXT) tsum_.lo tswap_.$(OBJEXT) tswap_.lo ttan_.$(OBJEXT) \
ttan_.lo ttanh_.$(OBJEXT) ttanh_.lo ttrunc_.$(OBJEXT) ttrunc_.lo \
tui_div_.$(OBJEXT) tui_div_.lo tui_pow_.$(OBJEXT) tui_pow_.lo \
tui_sub_.$(OBJEXT) tui_sub_.lo turandom_.$(OBJEXT) turandom_.lo \
tversion_.$(OBJEXT) tversion_.lo ty0_.$(OBJEXT) ty0_.lo ty1_.$(OBJEXT) \
ty1_.lo tyn_.$(OBJEXT) tyn_.lo tzeta_.$(OBJEXT) tzeta_.lo \
tzeta_ui_.$(OBJEXT) tzeta_ui_.lo : $(ANSI2KNR)

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	$(am__tty_colors); \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		col=$$red; res=XPASS; \
	      ;; \
	      *) \
		col=$$grn; res=PASS; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xfail=`expr $$xfail + 1`; \
		col=$$lgn; res=XFAIL; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		col=$$red; res=FAIL; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      col=$$blu; res=SKIP; \
	    fi; \
	    echo "$${col}$$res$${std}: $$tst"; \
	  done; \
	  if test "$$all" -eq 1; then \
	    tests="test"; \
	    All=""; \
	  else \
	    tests="tests"; \
	    All="All "; \
	  fi; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="$$All$$all $$tests passed"; \
	    else \
	      if test "$$xfail" -eq 1; then failures=failure; else failures=failures; fi; \
	      banner="$$All$$all $$tests behaved as expected ($$xfail expected $$failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all $$tests failed"; \
	    else \
	      if test "$$xpass" -eq 1; then passes=pass; else passes=passes; fi; \
	      banner="$$failed of $$all $$tests did not behave as expected ($$xpass unexpected $$passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    if test "$$skip" -eq 1; then \
	      skipped="($$skip test was not run)"; \
	    else \
	      skipped="($$skip tests were not run)"; \
	    fi; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  if test "$$failed" -eq 0; then \
	    echo "$$grn$$dashes"; \
	  else \
	    echo "$$red$$dashes"; \
	  fi; \
	  echo "$$banner"; \
	  test -z "$$skipped" || echo "$$skipped"; \
	  test -z "$$report" || echo "$$report"; \
	  echo "$$dashes$$std"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_LTLIBRARIES) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkLTLIBRARIES clean-checkPROGRAMS clean-generic \
	clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic mostlyclean-kr \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: $(top_builddir)/ansi2knr check-am install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-TESTS check-am clean \
	clean-checkLTLIBRARIES clean-checkPROGRAMS clean-generic \
	clean-libtool ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-kr mostlyclean-libtool pdf \
	pdf-am ps ps-am tags uninstall uninstall-am


$(top_builddir)/libmpfr.la:
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) libmpfr.la

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
