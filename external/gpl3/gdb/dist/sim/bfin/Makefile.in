#    Makefile template for Configure for the Blackfin simulator.
#    Copyright (C) 2005-2011 Free Software Foundation, Inc.
#    Written by Analog Devices, Inc.
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# This selects the bfin newlib/libgloss syscall definitions.
NL_TARGET = -DNL_TARGET_bfin

## COMMON_PRE_CONFIG_FRAG

# List of main object files for `run'.
SIM_RUN_OBJS = nrun.o

SIM_OBJS = \
	$(SIM_NEW_COMMON_OBJS) \
	bfin-sim.o \
	devices.o \
	gui.o \
	interp.o \
	machs.o \
	sim-cpu.o \
	sim-engine.o \
	sim-hload.o \
	sim-hrw.o \
	sim-model.o \
	sim-reason.o \
	sim-reg.o \
	sim-resume.o \
	sim-stop.o \
	@BFIN_SIM_EXTRA_OBJS@ \
	$(SIM_EXTRA_OBJS)

INCLUDE = bfin-sim.h

SIM_EXTRA_CFLAGS = @SDL_CFLAGS@
SIM_EXTRA_LIBS = @SDL_LIBS@ -lm

## COMMON_POST_CONFIG_FRAG

$(srcdir)/linux-fixed-code.h: $(srcdir)/linux-fixed-code.s Makefile.in
	$(AS_FOR_TARGET) $< -o linux-fixed-code.o
	(	set -e; \
		echo "/* DO NOT EDIT: Autogenerated from linux-fixed-code.s.  */"; \
		echo "static const unsigned char bfin_linux_fixed_code[] ="; \
		echo "{"; \
		$(OBJDUMP_FOR_TARGET) -d -z linux-fixed-code.o > $@.dis; \
		sed -n $@.dis \
			-e 's:^[^	]*	:0x:' \
			-e '/^0x/{s:	.*::;s: *$$:,:;s: :, 0x:g;p}'; \
		rm -f $@.dis; \
		echo "};" \
	) > $@.tmp
	rm -f linux-fixed-code.o
	mv $@.tmp $@

interp.o: interp.c targ-vals.h linux-targ-map.h linux-fixed-code.h devices.h $(INCLUDE)
bfin-sim.o: bfin-sim.c $(INCLUDE)
gui.o: gui.c $(INCLUDE)
machs.o: machs.c $(INCLUDE)
dv-bfin_cec.o: dv-bfin_cec.c devices.h $(INCLUDE)
dv-bfin_ctimer.o: dv-bfin_ctimer.c devices.h $(INCLUDE)
dv-bfin_dma.o: dv-bfin_dma.c devices.h $(INCLUDE)
dv-bfin_dma_pmap.o: dv-bfin_dma_pmap.c devices.h $(INCLUDE)
dv-bfin_ebiu_amc.o: dv-bfin_ebiu_amc.c devices.h $(INCLUDE)
dv-bfin_ebiu_ddrc.o: dv-bfin_ebiu_ddrc.c devices.h $(INCLUDE)
dv-bfin_ebiu_sdc.o: dv-bfin_ebiu_sdc.c devices.h $(INCLUDE)
dv-bfin_emac.o: dv-bfin_emac.c devices.h $(INCLUDE)
dv-bfin_eppi.o: dv-bfin_eppi.c devices.h $(INCLUDE)
dv-bfin_evt.o: dv-bfin_evt.c devices.h $(INCLUDE)
dv-bfin_gpio.o: dv-bfin_gpio.c devices.h $(INCLUDE)
dv-bfin_gptimer.o: dv-bfin_gptimer.c devices.h $(INCLUDE)
dv-bfin_jtag.o: dv-bfin_jtag.c devices.h $(INCLUDE)
dv-bfin_mmu.o: dv-bfin_mmu.c devices.h $(INCLUDE)
dv-bfin_nfc.o: dv-bfin_nfc.c devices.h $(INCLUDE)
dv-bfin_otp.o: dv-bfin_otp.c devices.h $(INCLUDE)
dv-bfin_pll.o: dv-bfin_pll.c devices.h $(INCLUDE)
dv-bfin_ppi.o: dv-bfin_ppi.c devices.h $(INCLUDE)
dv-bfin_rtc.o: dv-bfin_rtc.c devices.h $(INCLUDE)
dv-bfin_sic.o: dv-bfin_sic.c devices.h $(INCLUDE)
dv-bfin_spi.o: dv-bfin_spi.c devices.h $(INCLUDE)
dv-bfin_trace.o: dv-bfin_trace.c devices.h $(INCLUDE)
dv-bfin_twi.o: dv-bfin_twi.c devices.h $(INCLUDE)
dv-bfin_uart.o: dv-bfin_uart.c devices.h $(INCLUDE)
dv-bfin_uart2.o: dv-bfin_uart2.c devices.h $(INCLUDE)
dv-bfin_wdog.o: dv-bfin_wdog.c devices.h $(INCLUDE)
dv-bfin_wp.o: dv-bfin_wp.c devices.h $(INCLUDE)
dv-eth_phy.o: devices.h $(INCLUDE)
