#                                                                    -*-perl-*-
$description = "Test order-only prerequisites.";

$details = "\
Create makefiles with various combinations of normal and order-only
prerequisites and ensure they behave properly.  Test the \$| variable.";

open(MAKEFILE,"> $makefile");

print MAKEFILE <<'EOF';
foo: bar | baz
	@echo '$$^ = $^'
	@echo '$$| = $|'
	touch $@

.PHONY: baz

bar baz:
	touch $@
EOF

close(MAKEFILE);


# TEST #1 -- just the syntax

&run_make_with_options($makefile, "", &get_logfile);
$answer = "touch bar\ntouch baz\n\$^ = bar\n\$| = baz\ntouch foo\n";
&compare_output($answer,&get_logfile(1));


# TEST #2 -- now we do it again: baz is PHONY but foo should _NOT_ be updated

&run_make_with_options($makefile, "", &get_logfile);
$answer = "touch baz\n";
&compare_output($answer,&get_logfile(1));

unlink(qw(foo bar baz));

# Test prereqs that are both order and non-order

$makefile2 = &get_tmpfile;

open(MAKEFILE,"> $makefile2");

print MAKEFILE <<'EOF';
foo: bar | baz
	@echo '$$^ = $^'
	@echo '$$| = $|'
	touch $@

foo: baz

.PHONY: baz

bar baz:
	touch $@
EOF

close(MAKEFILE);

# TEST #3 -- Make sure the order-only prereq was promoted to normal.

&run_make_with_options($makefile2, "", &get_logfile);
$answer = "touch bar\ntouch baz\n\$^ = bar baz\n\$| = \ntouch foo\n";
&compare_output($answer,&get_logfile(1));


# TEST #4 -- now we do it again

&run_make_with_options($makefile2, "", &get_logfile);
$answer = "touch baz\n\$^ = bar baz\n\$| = \ntouch foo\n";
&compare_output($answer,&get_logfile(1));

unlink(qw(foo bar baz));

# Test empty normal prereqs

$makefile3 = &get_tmpfile;

open(MAKEFILE,"> $makefile3");

print MAKEFILE <<'EOF';
foo:| baz
	@echo '$$^ = $^'
	@echo '$$| = $|'
	touch $@

.PHONY: baz

baz:
	touch $@
EOF

close(MAKEFILE);

# TEST #5 -- make sure the parser was correct.

&run_make_with_options($makefile3, "", &get_logfile);
$answer = "touch baz\n\$^ = \n\$| = baz\ntouch foo\n";
&compare_output($answer,&get_logfile(1));


# TEST #6 -- now we do it again: this time foo won't be built

&run_make_with_options($makefile3, "", &get_logfile);
$answer = "touch baz\n";
&compare_output($answer,&get_logfile(1));

unlink(qw(foo baz));

1;
