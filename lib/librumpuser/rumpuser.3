.\"     $NetBSD: rumpuser.3,v 1.2 2010/03/01 17:20:44 pooka Exp $
.\"
.\" Copyright (c) 2010 Antti Kantee.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd March 1, 2010
.Dt RUMPUSER 3
.Os
.Sh NAME
.Nm rumpuser
.Nd rump hypervisor interface
.Sh LIBRARY
rump User Library (librumpuser, \-lrumpuser)
.Sh SYNOPSIS
.In rump/rumpuser.h
.Sh DESCRIPTION
.Nm
is the hypervisor interface for
.Xr rump 3
style kernel virtualization.
A virtual rump kernel can make calls to the host operating system
libraries and kernel (system calls) using
.Nm
interfaces.
Any "slow" hypervisor calls such as file I/O, sychronization wait,
or sleep will cause rump to unschedule the calling kernel thread
from the virtual CPU and free it for other consumers.
When the hypervisor call returns to the kernel, a new scheduling
operation takes place.
.Pp
For example, rump implements kernel threads directly as hypervisor
calls to host
.Xr pthread 3 .
This avoids the common virtualization drawback of multiple overlapping
and possibly conflicting implementations of same functionality in
the software stack.
.Pp
The
.Nm
interface is still under development and interface documentation
is available only in source form from
.Pa src/lib/librumpuser .
.Sh SEE ALSO
.Xr rump 3
